; ModuleID = './cilkbench/test-double.cpp'
source_filename = "./cilkbench/test-double.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__cilkrts_worker = type { %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame**, i32, %struct.__cilkrts_stack_frame*, %struct.cilkred_map*, %struct.global_state*, %struct.local_state*, i8*, i8*, %struct.__cilkrts_stack_frame**, [936 x i8] }
%struct.__cilkrts_stack_frame = type { i32, i32, %struct.__cilkrts_stack_frame*, %struct.__cilkrts_worker*, [5 x i8*], i8* }
%struct.cilkred_map = type { i32, i32, i32, i8, i32*, %struct.view_info* }
%struct.view_info = type { i8*, %struct.hyperobject_base* }
%struct.hyperobject_base = type { void (i8*)*, void (i8*, i8*)*, i64, i32, i32, i8* }
%struct.global_state = type { %struct.rts_options, i32, %struct.worker_args*, %struct.__cilkrts_worker**, %struct.ReadyDeque*, i64*, %struct.Closure*, [48 x i8], %struct.cilk_fiber_pool, %struct.global_im_pool, [8 x i8], %struct.cilk_im_desc, %union.cilk_mutex, [52 x i8], [5 x i8*], i8*, i8, [15 x i8], i32, i32, i32, i8, %union.pthread_mutex_t, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_cond_t, i8, i8, i8, [61 x i8], i32*, i32*, %union.cilk_mutex, [44 x i8], i64, [56 x i8], i32, %union.pthread_mutex_t, %union.pthread_cond_t, %union.cilk_mutex, %struct.reducer_id_manager*, %struct.hyper_table*, %struct.global_sched_stats, [16 x i8] }
%struct.rts_options = type { i64, i32, i32, i32, i32, i32 }
%struct.worker_args = type { i32, %struct.global_state* }
%struct.ReadyDeque = type { %union.cilk_mutex, %struct.Closure*, %struct.Closure*, i32, [36 x i8] }
%struct.Closure = type { %union.cilk_mutex, %struct.__cilkrts_stack_frame*, %struct.cilk_fiber*, %struct.cilk_fiber*, %struct.cilk_fiber*, %struct.cilk_fiber*, i32, i32, i8, i8, i8, i8, i32, i8*, %struct.Closure*, %struct.Closure*, %struct.Closure*, %struct.Closure*, %struct.Closure*, %struct.Closure*, %struct.Closure*, %struct.Closure*, %struct.cilkred_map*, %struct.cilkred_map*, %struct.cilkred_map*, i8*, i8*, %struct.cilk_fiber*, %struct.closure_exception, %struct.closure_exception, %struct.closure_exception, [48 x i8] }
%struct.cilk_fiber = type opaque
%struct.closure_exception = type { i8* }
%struct.cilk_fiber_pool = type { %union.cilk_mutex, i32, i32, i64, %struct.cilk_fiber_pool*, %struct.cilk_fiber**, i32, i32, %struct.fiber_pool_stats }
%struct.fiber_pool_stats = type { i32, i32, i32 }
%struct.global_im_pool = type { i8*, i8*, i8**, i32, i32, i64, i64, i64 }
%struct.cilk_im_desc = type { [7 x %struct.im_bucket], i64, [4 x i64] }
%struct.im_bucket = type { i8*, i32, i32, i32, i32, i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.anon }
%struct.anon = type { i32, i32, i64, i64, i64, i8*, i32, i32 }
%union.cilk_mutex = type { i32 }
%struct.reducer_id_manager = type opaque
%struct.hyper_table = type opaque
%struct.global_sched_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, [7 x double], [7 x i64] }
%struct.local_state = type { %struct.__cilkrts_stack_frame**, %struct.hyper_table_cache*, i16, i8, i32, i32, [5 x i8*], %struct.cilk_fiber_pool, %struct.cilk_im_desc, %struct.cilk_fiber*, %struct.cilk_fiber*, %struct.sched_stats }
%struct.hyper_table_cache = type opaque
%struct.sched_stats = type { [7 x i64], [7 x i64], [7 x i64], [7 x i64], i64, i64, i64, i64 }
%struct.__pedigree_frame = type { %struct.__cilkrts_pedigree, i64, i64, i64 }
%struct.__cilkrts_pedigree = type { i64, %struct.__cilkrts_pedigree* }

@__pedigree_dprng_m_array = external dso_local global i64*, align 8
@__cilkrts_stack_frame_align = private global i64 8, align 8, !dbg !0
@alert_level = external dso_local global i32, align 4
@.str = private unnamed_addr constant [25 x i8] c"__cilkrts_enter_frame %p\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"__cilkrts_enter_frame_helper %p\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"__cilkrts_detach %p\00", align 1
@__cilkrts_use_extension = external dso_local global i8, align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"__cilkrts_leave_frame %p\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"__cilkrts_leave_frame parent is call_parent!\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"__cilkrts_leave_frame_helper %p\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"__cilkrts_pause_frame %p\00", align 1
@cilkg_nproc = external dso_local global i32, align 4
@__cilkrts_tls_worker = external thread_local global %struct.__cilkrts_worker*, align 8

; Function Attrs: noinline stealable uwtable
define dso_local void @_Z4loopPA10_iS0_([10 x i32]* noundef %A, [10 x i32]* noundef %B) #0 personality i32 (...)* @__cilk_personality_v0 {
entry:
  %sf.addr.i.i.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %g.addr.i.i = alloca %struct.global_state*, align 8
  %sf.addr.i1.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i.i81 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i.i = alloca %struct.__cilkrts_worker*, align 8
  %parent.i.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %flags.i.i = alloca i32, align 4
  %sf.addr.i82 = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i3.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i.i74 = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i75 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i76 = alloca %struct.__cilkrts_worker*, align 8
  %.atomictmp.i = alloca %struct.__cilkrts_worker*, align 8
  %sf.addr.i.i44 = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i45 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i46 = alloca %struct.__cilkrts_worker*, align 8
  %sf.addr.i.i38 = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i39 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i = alloca %struct.__cilkrts_worker*, align 8
  %sf.addr.i.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %res.i = alloca i32, align 4
  %A.addr = alloca [10 x i32]*, align 8
  %B.addr = alloca [10 x i32]*, align 8
  %syncreg = call token @llvm.syncregion.start()
  %__init = alloca i32, align 4
  %__limit = alloca i32, align 4
  %__begin = alloca i32, align 4
  %__end = alloca i32, align 4
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i75, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i75, metadata !69, metadata !DIExpression()) #8, !dbg !428
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i76, metadata !429, metadata !DIExpression()) #8, !dbg !432
  %0 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** @__cilkrts_tls_worker, align 8, !dbg !433
  store %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %w.i76, align 8, !dbg !432
  %1 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i75, align 8, !dbg !438
  %flags.i77 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %1, i32 0, i32 0, !dbg !439
  store i32 0, i32* %flags.i77, align 8, !dbg !440
  %2 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i76, align 8, !dbg !441
  %cmp.i78 = icmp eq %struct.__cilkrts_worker* null, %2, !dbg !443
  br i1 %cmp.i78, label %if.then.i79, label %__cilkrts_enter_frame.exit, !dbg !444

if.then.i79:                                      ; preds = %entry
  %3 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i75, align 8, !dbg !445
  store %struct.__cilkrts_stack_frame* %3, %struct.__cilkrts_stack_frame** %sf.addr.i.i74, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i74, metadata !447, metadata !DIExpression()) #8, !dbg !449
  %4 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i74, align 8, !dbg !451
  %ctx.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %4, i32 0, i32 4, !dbg !453
  %arraydecay.i.i = getelementptr inbounds [5 x i8*], [5 x i8*]* %ctx.i.i, i64 0, i64 0, !dbg !454
  %5 = call i8* @llvm.frameaddress.p0i8(i32 0) #8, !dbg !454
  store i8* %5, i8** %arraydecay.i.i, align 8, !dbg !454
  %6 = call i8* @llvm.stacksave() #8, !dbg !454
  %7 = getelementptr inbounds i8*, i8** %arraydecay.i.i, i64 2, !dbg !454
  store i8* %6, i8** %7, align 8, !dbg !454
  %8 = bitcast i8** %arraydecay.i.i to i8*, !dbg !454
  %9 = call i32 @llvm.eh.sjlj.setjmp(i8* %8) #8, !dbg !454
  %cmp.i.i = icmp eq i32 %9, 0, !dbg !455
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !456

if.then.i.i:                                      ; preds = %if.then.i79
  %10 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i74, align 8, !dbg !457
  store %struct.__cilkrts_stack_frame* %10, %struct.__cilkrts_stack_frame** %sf.addr.i3.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i3.i, metadata !459, metadata !DIExpression()) #8, !dbg !461
  %11 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i74, align 8, !dbg !463
  call void @__cilkrts_internal_invoke_cilkified_root(%struct.__cilkrts_stack_frame* noundef %11) #8, !dbg !464
  br label %cilkify.exit.i, !dbg !465

if.else.i.i:                                      ; preds = %if.then.i79
  call void @sanitizer_finish_switch_fiber() #8, !dbg !466
  br label %cilkify.exit.i

cilkify.exit.i:                                   ; preds = %if.else.i.i, %if.then.i.i
  %12 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** @__cilkrts_tls_worker, align 8, !dbg !468
  store %struct.__cilkrts_worker* %12, %struct.__cilkrts_worker** %w.i76, align 8, !dbg !470
  br label %__cilkrts_enter_frame.exit, !dbg !471

__cilkrts_enter_frame.exit:                       ; preds = %entry, %cilkify.exit.i
  %13 = load i32, i32* @alert_level, align 4, !dbg !472
  %14 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i75, align 8, !dbg !473
  %magic.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %14, i32 0, i32 1, !dbg !474
  store i32 25942344, i32* %magic.i, align 4, !dbg !475
  %15 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i76, align 8, !dbg !476
  %current_stack_frame.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %15, i32 0, i32 4, !dbg !477
  %16 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %current_stack_frame.i, align 32, !dbg !477
  %17 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i75, align 8, !dbg !478
  %call_parent.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %17, i32 0, i32 2, !dbg !479
  store %struct.__cilkrts_stack_frame* %16, %struct.__cilkrts_stack_frame** %call_parent.i, align 8, !dbg !480
  %18 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i75, align 8, !dbg !481
  %worker.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %18, i32 0, i32 3, !dbg !482
  %19 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i76, align 8, !dbg !483
  store %struct.__cilkrts_worker* %19, %struct.__cilkrts_worker** %.atomictmp.i, align 8, !dbg !484
  %20 = bitcast %struct.__cilkrts_worker** %worker.i to i64*, !dbg !484
  %21 = bitcast %struct.__cilkrts_worker** %.atomictmp.i to i64*, !dbg !484
  %22 = load i64, i64* %21, align 8, !dbg !484
  store atomic i64 %22, i64* %20 monotonic, align 8, !dbg !484
  %23 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i75, align 8, !dbg !485
  %24 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i76, align 8, !dbg !486
  %current_stack_frame2.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %24, i32 0, i32 4, !dbg !487
  store %struct.__cilkrts_stack_frame* %23, %struct.__cilkrts_stack_frame** %current_stack_frame2.i, align 32, !dbg !488
  store [10 x i32]* %A, [10 x i32]** %A.addr, align 8
  store [10 x i32]* %B, [10 x i32]** %B.addr, align 8
  store i32 0, i32* %__init, align 4
  store i32 3, i32* %__limit, align 4
  %25 = load i32, i32* %__init, align 4
  %26 = load i32, i32* %__limit, align 4
  %cmp = icmp slt i32 %25, %26
  br i1 %cmp, label %pfor.ph, label %pfor.end37

pfor.ph:                                          ; preds = %__cilkrts_enter_frame.exit
  store i32 0, i32* %__begin, align 4
  %27 = load i32, i32* %__limit, align 4
  %28 = load i32, i32* %__init, align 4
  %sub = sub nsw i32 %27, %28
  %sub1 = sub nsw i32 %sub, 1
  %div = sdiv i32 %sub1, 1
  %add = add nsw i32 %div, 1
  store i32 %add, i32* %__end, align 4
  br label %pfor.cond

pfor.cond:                                        ; preds = %pfor.inc32, %pfor.ph
  br label %pfor.detach

pfor.detach:                                      ; preds = %pfor.cond
  %29 = load i32, i32* %__init, align 4
  %30 = load i32, i32* %__begin, align 4
  %mul = mul nsw i32 %30, 1
  %add2 = add nsw i32 %29, %mul
  %31 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31)
  %32 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32)
  %33 = bitcast i32* %res.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33)
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i, metadata !489, metadata !DIExpression()) #8, !dbg !493
  %34 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !494
  store %struct.__cilkrts_stack_frame* %34, %struct.__cilkrts_stack_frame** %sf.addr.i.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i, metadata !459, metadata !DIExpression()) #8, !dbg !495
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !497, metadata !DIExpression()) #8, !dbg !498
  %35 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !499
  %ctx.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %35, i32 0, i32 4, !dbg !500
  %arraydecay.i = getelementptr inbounds [5 x i8*], [5 x i8*]* %ctx.i, i64 0, i64 0, !dbg !501
  %36 = call i8* @llvm.frameaddress.p0i8(i32 0) #8, !dbg !501
  store i8* %36, i8** %arraydecay.i, align 8, !dbg !501
  %37 = call i8* @llvm.stacksave() #8, !dbg !501
  %38 = getelementptr inbounds i8*, i8** %arraydecay.i, i64 2, !dbg !501
  store i8* %37, i8** %38, align 8, !dbg !501
  %39 = bitcast i8** %arraydecay.i to i8*, !dbg !501
  %40 = call i32 @llvm.eh.sjlj.setjmp(i8* %39) #8, !dbg !501
  store i32 %40, i32* %res.i, align 4, !dbg !498
  %41 = load i32, i32* %res.i, align 4, !dbg !502
  %cmp.i = icmp ne i32 %41, 0, !dbg !504
  br i1 %cmp.i, label %if.then.i, label %__cilk_prepare_spawn.exit, !dbg !505

if.then.i:                                        ; preds = %pfor.detach
  call void @sanitizer_finish_switch_fiber() #8, !dbg !506
  br label %__cilk_prepare_spawn.exit, !dbg !508

__cilk_prepare_spawn.exit:                        ; preds = %pfor.detach, %if.then.i
  %42 = load i32, i32* %res.i, align 4, !dbg !509
  %43 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i to i8*, !dbg !510
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43), !dbg !510
  %44 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i to i8*, !dbg !510
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44), !dbg !510
  %45 = bitcast i32* %res.i to i8*, !dbg !510
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %45), !dbg !510
  %46 = icmp eq i32 %42, 0
  br i1 %46, label %pfor.detach.split, label %pfor.inc32

pfor.detach.split:                                ; preds = %__cilk_prepare_spawn.exit
  call fastcc void @_Z4loopPA10_iS0_.outline_pfor.body.entry.otd1([10 x i32]** %B.addr, [10 x i32]** %A.addr, i32 %add2)
  br label %pfor.inc32

pfor.body.entry:                                  ; No predecessors!
  %i = alloca i32, align 4
  %syncreg3 = call token @llvm.syncregion.start()
  %__init4 = alloca i32, align 4
  %__limit5 = alloca i32, align 4
  %__begin8 = alloca i32, align 4
  %__end9 = alloca i32, align 4
  store i32 %add2, i32* %i, align 4
  br label %pfor.body

pfor.body:                                        ; preds = %pfor.body.entry
  store i32 0, i32* %__init4, align 4
  store i32 10, i32* %__limit5, align 4
  %47 = load i32, i32* %__init4, align 4
  %48 = load i32, i32* %__limit5, align 4
  %cmp6 = icmp slt i32 %47, %48
  br i1 %cmp6, label %pfor.ph7, label %pfor.end

pfor.ph7:                                         ; preds = %pfor.body
  store i32 0, i32* %__begin8, align 4
  %49 = load i32, i32* %__limit5, align 4
  %50 = load i32, i32* %__init4, align 4
  %sub10 = sub nsw i32 %49, %50
  %sub11 = sub nsw i32 %sub10, 1
  %div12 = sdiv i32 %sub11, 1
  %add13 = add nsw i32 %div12, 1
  store i32 %add13, i32* %__end9, align 4
  br label %pfor.cond14

pfor.cond14:                                      ; preds = %pfor.inc, %pfor.ph7
  br label %pfor.detach15

pfor.detach15:                                    ; preds = %pfor.cond14
  %51 = load i32, i32* %__init4, align 4
  %52 = load i32, i32* %__begin8, align 4
  %mul16 = mul nsw i32 %52, 1
  %add17 = add nsw i32 %51, %mul16
  call fastcc void @_Z4loopPA10_iS0_.outline_pfor.body.entry18.otd2([10 x i32]** %B.addr, [10 x i32]** %A.addr, i32* %i, i32 %add17)
  br label %pfor.inc

pfor.body.entry18:                                ; No predecessors!
  %j = alloca i32, align 4
  store i32 %add17, i32* %j, align 4
  br label %pfor.body19

pfor.body19:                                      ; preds = %pfor.body.entry18
  %53 = load [10 x i32]*, [10 x i32]** %B.addr, align 8
  %54 = load i32, i32* %j, align 4
  %idxprom = sext i32 %54 to i64
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %53, i64 %idxprom
  %arrayidx20 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx, i64 0, i64 0
  %55 = load i32, i32* %arrayidx20, align 4
  %56 = load [10 x i32]*, [10 x i32]** %B.addr, align 8
  %57 = load i32, i32* %j, align 4
  %add21 = add nsw i32 %57, 1
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds [10 x i32], [10 x i32]* %56, i64 %idxprom22
  %arrayidx24 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx23, i64 0, i64 0
  %58 = load i32, i32* %arrayidx24, align 4
  %add25 = add nsw i32 %55, %58
  %59 = load [10 x i32]*, [10 x i32]** %A.addr, align 8
  %60 = load i32, i32* %i, align 4
  %idxprom26 = sext i32 %60 to i64
  %arrayidx27 = getelementptr inbounds [10 x i32], [10 x i32]* %59, i64 %idxprom26
  %61 = load i32, i32* %j, align 4
  %idxprom28 = sext i32 %61 to i64
  %arrayidx29 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx27, i64 0, i64 %idxprom28
  store i32 %add25, i32* %arrayidx29, align 4
  br label %pfor.preattach

pfor.preattach:                                   ; preds = %pfor.body19
  reattach within %syncreg3, label %pfor.inc

pfor.inc:                                         ; preds = %pfor.detach15, %pfor.preattach
  %62 = load i32, i32* %__begin8, align 4
  %inc = add nsw i32 %62, 1
  store i32 %inc, i32* %__begin8, align 4
  %63 = load i32, i32* %__begin8, align 4
  %64 = load i32, i32* %__end9, align 4
  %cmp30 = icmp slt i32 %63, %64
  br i1 %cmp30, label %pfor.cond14, label %pfor.cond.cleanup, !llvm.loop !511

pfor.cond.cleanup:                                ; preds = %pfor.inc
  %65 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65)
  %66 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %66)
  %67 = bitcast %struct.__cilkrts_worker** %w.i46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %67)
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i45, metadata !513, metadata !DIExpression()), !dbg !515
  %68 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8, !dbg !516
  %flags.i47 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %68, i32 0, i32 0, !dbg !518
  %69 = load i32, i32* %flags.i47, align 8, !dbg !518
  %and.i48 = and i32 %69, 2, !dbg !519
  %tobool.i49 = icmp ne i32 %and.i48, 0, !dbg !519
  br i1 %tobool.i49, label %if.then.i55, label %lor.lhs.false.i51, !dbg !520

lor.lhs.false.i51:                                ; preds = %pfor.cond.cleanup
  %70 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !521
  %tobool1.i50 = trunc i8 %70 to i1, !dbg !521
  br i1 %tobool1.i50, label %if.then.i55, label %__cilk_sync.exit73, !dbg !522

if.then.i55:                                      ; preds = %lor.lhs.false.i51, %pfor.cond.cleanup
  %71 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8, !dbg !523
  %flags2.i52 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %71, i32 0, i32 0, !dbg !526
  %72 = load i32, i32* %flags2.i52, align 8, !dbg !526
  %and3.i53 = and i32 %72, 2, !dbg !527
  %tobool4.i54 = icmp ne i32 %and3.i53, 0, !dbg !527
  br i1 %tobool4.i54, label %if.then5.i59, label %if.end12.i68, !dbg !528

if.then5.i59:                                     ; preds = %if.then.i55
  %73 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8, !dbg !529
  %ctx.i56 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %73, i32 0, i32 4, !dbg !532
  %arraydecay.i57 = getelementptr inbounds [5 x i8*], [5 x i8*]* %ctx.i56, i64 0, i64 0, !dbg !533
  %74 = call i8* @llvm.frameaddress.p0i8(i32 0), !dbg !533
  store i8* %74, i8** %arraydecay.i57, align 8, !dbg !533
  %75 = call i8* @llvm.stacksave(), !dbg !533
  %76 = getelementptr inbounds i8*, i8** %arraydecay.i57, i64 2, !dbg !533
  store i8* %75, i8** %76, align 8, !dbg !533
  %77 = bitcast i8** %arraydecay.i57 to i8*, !dbg !533
  %78 = call i32 @llvm.eh.sjlj.setjmp(i8* %77), !dbg !533
  %cmp.i58 = icmp eq i32 %78, 0, !dbg !534
  br i1 %cmp.i58, label %if.then6.i60, label %if.else.i64, !dbg !535

if.then6.i60:                                     ; preds = %if.then5.i59
  %79 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8, !dbg !536
  store %struct.__cilkrts_stack_frame* %79, %struct.__cilkrts_stack_frame** %sf.addr.i.i44, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i44, metadata !459, metadata !DIExpression()), !dbg !538
  %80 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8, !dbg !540
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* noundef %80) #14, !dbg !541
  unreachable, !dbg !541

if.else.i64:                                      ; preds = %if.then5.i59
  call void @sanitizer_finish_switch_fiber() #8, !dbg !542
  %81 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8, !dbg !544
  %flags7.i61 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %81, i32 0, i32 0, !dbg !546
  %82 = load i32, i32* %flags7.i61, align 8, !dbg !546
  %and8.i62 = and i32 %82, 8, !dbg !547
  %tobool9.i63 = icmp ne i32 %and8.i62, 0, !dbg !547
  br i1 %tobool9.i63, label %if.then10.i65, label %if.end.i66, !dbg !548

if.then10.i65:                                    ; preds = %if.else.i64
  %83 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8, !dbg !549
  call void @__cilkrts_check_exception_raise(%struct.__cilkrts_stack_frame* noundef %83), !dbg !551
  br label %if.end.i66, !dbg !552

if.end.i66:                                       ; preds = %if.then10.i65, %if.else.i64
  br label %if.end12.i68, !dbg !553

if.end12.i68:                                     ; preds = %if.end.i66, %if.then.i55
  %84 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !554
  %tobool13.i67 = trunc i8 %84 to i1, !dbg !554
  br i1 %tobool13.i67, label %if.then14.i71, label %if.end15.i72, !dbg !556

if.then14.i71:                                    ; preds = %if.end12.i68
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i46, metadata !557, metadata !DIExpression()), !dbg !559
  %85 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i45, align 8, !dbg !560
  %call.i69 = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %85) #8, !dbg !561
  store %struct.__cilkrts_worker* %call.i69, %struct.__cilkrts_worker** %w.i46, align 8, !dbg !559
  %86 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i46, align 8, !dbg !562
  %extension.i70 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %86, i32 0, i32 8, !dbg !563
  call void @__cilkrts_extend_sync(i8** noundef %extension.i70) #8, !dbg !564
  br label %if.end15.i72, !dbg !565

if.end15.i72:                                     ; preds = %if.then14.i71, %if.end12.i68
  br label %__cilk_sync.exit73, !dbg !566

__cilk_sync.exit73:                               ; preds = %lor.lhs.false.i51, %if.end15.i72
  %87 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i44 to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87), !dbg !567
  %88 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i45 to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88), !dbg !567
  %89 = bitcast %struct.__cilkrts_worker** %w.i46 to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89), !dbg !567
  br label %sync.continue

sync.continue:                                    ; preds = %__cilk_sync.exit73
  call void @llvm.sync.unwind(token %syncreg3)
  br label %pfor.end

pfor.end:                                         ; preds = %sync.continue, %pfor.body
  br label %pfor.preattach31

pfor.preattach31:                                 ; preds = %pfor.end
  reattach within %syncreg, label %pfor.inc32

pfor.inc32:                                       ; preds = %__cilk_prepare_spawn.exit, %pfor.detach.split, %pfor.preattach31
  %90 = load i32, i32* %__begin, align 4
  %inc33 = add nsw i32 %90, 1
  store i32 %inc33, i32* %__begin, align 4
  %91 = load i32, i32* %__begin, align 4
  %92 = load i32, i32* %__end, align 4
  %cmp34 = icmp slt i32 %91, %92
  br i1 %cmp34, label %pfor.cond, label %pfor.cond.cleanup35, !llvm.loop !568

pfor.cond.cleanup35:                              ; preds = %pfor.inc32
  %93 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %93)
  %94 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %94)
  %95 = bitcast %struct.__cilkrts_worker** %w.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %95)
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i39, metadata !513, metadata !DIExpression()), !dbg !515
  %96 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8, !dbg !516
  %flags.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %96, i32 0, i32 0, !dbg !518
  %97 = load i32, i32* %flags.i, align 8, !dbg !518
  %and.i = and i32 %97, 2, !dbg !519
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !519
  br i1 %tobool.i, label %if.then.i40, label %lor.lhs.false.i, !dbg !520

lor.lhs.false.i:                                  ; preds = %pfor.cond.cleanup35
  %98 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !521
  %tobool1.i = trunc i8 %98 to i1, !dbg !521
  br i1 %tobool1.i, label %if.then.i40, label %__cilk_sync.exit, !dbg !522

if.then.i40:                                      ; preds = %lor.lhs.false.i, %pfor.cond.cleanup35
  %99 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8, !dbg !523
  %flags2.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %99, i32 0, i32 0, !dbg !526
  %100 = load i32, i32* %flags2.i, align 8, !dbg !526
  %and3.i = and i32 %100, 2, !dbg !527
  %tobool4.i = icmp ne i32 %and3.i, 0, !dbg !527
  br i1 %tobool4.i, label %if.then5.i, label %if.end12.i, !dbg !528

if.then5.i:                                       ; preds = %if.then.i40
  %101 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8, !dbg !529
  %ctx.i41 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %101, i32 0, i32 4, !dbg !532
  %arraydecay.i42 = getelementptr inbounds [5 x i8*], [5 x i8*]* %ctx.i41, i64 0, i64 0, !dbg !533
  %102 = call i8* @llvm.frameaddress.p0i8(i32 0), !dbg !533
  store i8* %102, i8** %arraydecay.i42, align 8, !dbg !533
  %103 = call i8* @llvm.stacksave(), !dbg !533
  %104 = getelementptr inbounds i8*, i8** %arraydecay.i42, i64 2, !dbg !533
  store i8* %103, i8** %104, align 8, !dbg !533
  %105 = bitcast i8** %arraydecay.i42 to i8*, !dbg !533
  %106 = call i32 @llvm.eh.sjlj.setjmp(i8* %105), !dbg !533
  %cmp.i43 = icmp eq i32 %106, 0, !dbg !534
  br i1 %cmp.i43, label %if.then6.i, label %if.else.i, !dbg !535

if.then6.i:                                       ; preds = %if.then5.i
  %107 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8, !dbg !536
  store %struct.__cilkrts_stack_frame* %107, %struct.__cilkrts_stack_frame** %sf.addr.i.i38, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i38, metadata !459, metadata !DIExpression()), !dbg !538
  %108 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8, !dbg !540
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* noundef %108) #14, !dbg !541
  unreachable, !dbg !541

if.else.i:                                        ; preds = %if.then5.i
  call void @sanitizer_finish_switch_fiber() #8, !dbg !542
  %109 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8, !dbg !544
  %flags7.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %109, i32 0, i32 0, !dbg !546
  %110 = load i32, i32* %flags7.i, align 8, !dbg !546
  %and8.i = and i32 %110, 8, !dbg !547
  %tobool9.i = icmp ne i32 %and8.i, 0, !dbg !547
  br i1 %tobool9.i, label %if.then10.i, label %if.end.i, !dbg !548

if.then10.i:                                      ; preds = %if.else.i
  %111 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8, !dbg !549
  call void @__cilkrts_check_exception_raise(%struct.__cilkrts_stack_frame* noundef %111), !dbg !551
  br label %if.end.i, !dbg !552

if.end.i:                                         ; preds = %if.then10.i, %if.else.i
  br label %if.end12.i, !dbg !553

if.end12.i:                                       ; preds = %if.end.i, %if.then.i40
  %112 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !554
  %tobool13.i = trunc i8 %112 to i1, !dbg !554
  br i1 %tobool13.i, label %if.then14.i, label %if.end15.i, !dbg !556

if.then14.i:                                      ; preds = %if.end12.i
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i, metadata !557, metadata !DIExpression()), !dbg !559
  %113 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i39, align 8, !dbg !560
  %call.i = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %113) #8, !dbg !561
  store %struct.__cilkrts_worker* %call.i, %struct.__cilkrts_worker** %w.i, align 8, !dbg !559
  %114 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i, align 8, !dbg !562
  %extension.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %114, i32 0, i32 8, !dbg !563
  call void @__cilkrts_extend_sync(i8** noundef %extension.i) #8, !dbg !564
  br label %if.end15.i, !dbg !565

if.end15.i:                                       ; preds = %if.then14.i, %if.end12.i
  br label %__cilk_sync.exit, !dbg !566

__cilk_sync.exit:                                 ; preds = %lor.lhs.false.i, %if.end15.i
  %115 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i38 to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115), !dbg !567
  %116 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i39 to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116), !dbg !567
  %117 = bitcast %struct.__cilkrts_worker** %w.i to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117), !dbg !567
  br label %sync.continue36

sync.continue36:                                  ; preds = %__cilk_sync.exit
  call void @llvm.sync.unwind(token %syncreg)
  br label %pfor.end37

pfor.end37:                                       ; preds = %sync.continue36, %__cilkrts_enter_frame.exit
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i82, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i82, metadata !569, metadata !DIExpression()) #8, !dbg !571
  %118 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i82, align 8, !dbg !572
  store %struct.__cilkrts_stack_frame* %118, %struct.__cilkrts_stack_frame** %sf.addr.i.i81, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i81, metadata !573, metadata !DIExpression()) #8, !dbg !575
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i.i, metadata !577, metadata !DIExpression()) #8, !dbg !578
  %119 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i81, align 8, !dbg !579
  %call.i.i = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %119) #8, !dbg !580
  store %struct.__cilkrts_worker* %call.i.i, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !578
  %120 = load i32, i32* @alert_level, align 4, !dbg !581
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %parent.i.i, metadata !582, metadata !DIExpression()) #8, !dbg !583
  %121 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i81, align 8, !dbg !584
  %call_parent.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %121, i32 0, i32 2, !dbg !585
  %122 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %call_parent.i.i, align 8, !dbg !585
  store %struct.__cilkrts_stack_frame* %122, %struct.__cilkrts_stack_frame** %parent.i.i, align 8, !dbg !583
  %123 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i.i, align 8, !dbg !586
  %124 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !587
  %current_stack_frame.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %124, i32 0, i32 4, !dbg !588
  store %struct.__cilkrts_stack_frame* %123, %struct.__cilkrts_stack_frame** %current_stack_frame.i.i, align 32, !dbg !589
  %125 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i81, align 8, !dbg !590
  %call_parent1.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %125, i32 0, i32 2, !dbg !591
  store %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %call_parent1.i.i, align 8, !dbg !592
  call void @llvm.dbg.declare(metadata i32* %flags.i.i, metadata !593, metadata !DIExpression()) #8, !dbg !594
  %126 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i81, align 8, !dbg !595
  %flags2.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %126, i32 0, i32 0, !dbg !596
  %127 = load i32, i32* %flags2.i.i, align 8, !dbg !596
  store i32 %127, i32* %flags.i.i, align 4, !dbg !594
  %128 = load i32, i32* %flags.i.i, align 4, !dbg !597
  %and3.i.i = and i32 %128, 128, !dbg !599
  %tobool4.i.i = icmp ne i32 %and3.i.i, 0, !dbg !599
  br i1 %tobool4.i.i, label %if.then.i.i85, label %if.end.i.i, !dbg !600

if.then.i.i85:                                    ; preds = %pfor.end37
  %129 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !601
  %g.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %129, i32 0, i32 6, !dbg !603
  %130 = load %struct.global_state*, %struct.global_state** %g.i.i, align 16, !dbg !603
  %131 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i81, align 8, !dbg !604
  store %struct.global_state* %130, %struct.global_state** %g.addr.i.i, align 8
  call void @llvm.dbg.declare(metadata %struct.global_state** %g.addr.i.i, metadata !605, metadata !DIExpression()) #8, !dbg !609
  store %struct.__cilkrts_stack_frame* %131, %struct.__cilkrts_stack_frame** %sf.addr.i1.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i1.i, metadata !611, metadata !DIExpression()) #8, !dbg !612
  %132 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i1.i, align 8, !dbg !613
  %ctx.i.i83 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %132, i32 0, i32 4, !dbg !615
  %arraydecay.i.i84 = getelementptr inbounds [5 x i8*], [5 x i8*]* %ctx.i.i83, i64 0, i64 0, !dbg !616
  %133 = call i8* @llvm.frameaddress.p0i8(i32 0) #8, !dbg !616
  store i8* %133, i8** %arraydecay.i.i84, align 8, !dbg !616
  %134 = call i8* @llvm.stacksave() #8, !dbg !616
  %135 = getelementptr inbounds i8*, i8** %arraydecay.i.i84, i64 2, !dbg !616
  store i8* %134, i8** %135, align 8, !dbg !616
  %136 = bitcast i8** %arraydecay.i.i84 to i8*, !dbg !616
  %137 = call i32 @llvm.eh.sjlj.setjmp(i8* %136) #8, !dbg !616
  %cmp.i2.i = icmp eq i32 %137, 0, !dbg !617
  br i1 %cmp.i2.i, label %if.then.i3.i, label %if.else.i.i86, !dbg !618

if.then.i3.i:                                     ; preds = %if.then.i.i85
  %138 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i1.i, align 8, !dbg !619
  store %struct.__cilkrts_stack_frame* %138, %struct.__cilkrts_stack_frame** %sf.addr.i.i.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i.i, metadata !459, metadata !DIExpression()) #8, !dbg !621
  %139 = load %struct.global_state*, %struct.global_state** %g.addr.i.i, align 8, !dbg !623
  %140 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i1.i, align 8, !dbg !624
  call void @__cilkrts_internal_exit_cilkified_root(%struct.global_state* noundef %139, %struct.__cilkrts_stack_frame* noundef %140) #8, !dbg !625
  br label %uncilkify.exit.i, !dbg !626

if.else.i.i86:                                    ; preds = %if.then.i.i85
  call void @sanitizer_finish_switch_fiber() #8, !dbg !627
  br label %uncilkify.exit.i

uncilkify.exit.i:                                 ; preds = %if.else.i.i86, %if.then.i3.i
  %141 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i81, align 8, !dbg !629
  %flags5.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %141, i32 0, i32 0, !dbg !630
  %142 = load i32, i32* %flags5.i.i, align 8, !dbg !630
  store i32 %142, i32* %flags.i.i, align 4, !dbg !631
  br label %if.end.i.i, !dbg !632

if.end.i.i:                                       ; preds = %uncilkify.exit.i, %pfor.end37
  %143 = load i32, i32* %flags.i.i, align 4, !dbg !633
  %cmp.i.i87 = icmp eq i32 %143, 0, !dbg !635
  br i1 %cmp.i.i87, label %if.then6.i.i, label %if.end7.i.i, !dbg !636

if.then6.i.i:                                     ; preds = %if.end.i.i
  br label %__cilk_parent_epilogue.exit, !dbg !637

if.end7.i.i:                                      ; preds = %if.end.i.i
  %144 = load i32, i32* %flags.i.i, align 4, !dbg !639
  %and8.i.i = and i32 %144, 1, !dbg !641
  %tobool9.i.i = icmp ne i32 %and8.i.i, 0, !dbg !641
  br i1 %tobool9.i.i, label %if.then10.i.i, label %__cilk_parent_epilogue.exit, !dbg !642

if.then10.i.i:                                    ; preds = %if.end7.i.i
  %145 = load i32, i32* @alert_level, align 4, !dbg !643
  %146 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !645
  call void @Cilk_set_return(%struct.__cilkrts_worker* noundef %146) #8, !dbg !646
  br label %__cilk_parent_epilogue.exit, !dbg !647

__cilk_parent_epilogue.exit:                      ; preds = %if.then6.i.i, %if.end7.i.i, %if.then10.i.i
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare token @llvm.syncregion.start() #1

; Function Attrs: argmemonly willreturn
declare void @llvm.sync.unwind(token) #2

; Function Attrs: mustprogress noinline norecurse uwtable
define dso_local noundef i32 @main() #3 {
entry:
  %retval = alloca i32, align 4
  %A = alloca [3 x [10 x i32]], align 16
  %B = alloca [3 x [10 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 10
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %A, i64 0, i64 %idxprom
  %3 = load i32, i32* %j, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx, i64 0, i64 %idxprom4
  store i32 0, i32* %arrayidx5, align 4
  %4 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %4 to i64
  %arrayidx7 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %B, i64 0, i64 %idxprom6
  %5 = load i32, i32* %j, align 4
  %idxprom8 = sext i32 %5 to i64
  %arrayidx9 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx7, i64 0, i64 %idxprom8
  store i32 0, i32* %arrayidx9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %j, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1, !llvm.loop !648

for.end:                                          ; preds = %for.cond1
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %7 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %7, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond, !llvm.loop !650

for.end12:                                        ; preds = %for.cond
  %arraydecay = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %A, i64 0, i64 0
  %arraydecay13 = getelementptr inbounds [3 x [10 x i32]], [3 x [10 x i32]]* %B, i64 0, i64 0
  call void @_Z4loopPA10_iS0_([10 x i32]* noundef %arraydecay, [10 x i32]* noundef %arraydecay13)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define available_externally dso_local void @__cilkrts_extend_spawn(%struct.__cilkrts_worker* noundef %w, i8** noundef %parent_extension, i8** noundef %child_extension) #4 !dbg !651 {
entry:
  %w.addr = alloca %struct.__cilkrts_worker*, align 8
  %parent_extension.addr = alloca i8**, align 8
  %child_extension.addr = alloca i8**, align 8
  %frame = alloca %struct.__pedigree_frame*, align 8
  %parent_frame = alloca %struct.__pedigree_frame*, align 8
  %parent_dprng_dotproduct = alloca i64, align 8
  store %struct.__cilkrts_worker* %w, %struct.__cilkrts_worker** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.addr, metadata !656, metadata !DIExpression()), !dbg !657
  store i8** %parent_extension, i8*** %parent_extension.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %parent_extension.addr, metadata !658, metadata !DIExpression()), !dbg !659
  store i8** %child_extension, i8*** %child_extension.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %child_extension.addr, metadata !660, metadata !DIExpression()), !dbg !661
  %0 = load i8**, i8*** %child_extension.addr, align 8, !dbg !662
  %1 = load i8*, i8** %0, align 8, !dbg !663
  %2 = load i8**, i8*** %parent_extension.addr, align 8, !dbg !664
  store i8* %1, i8** %2, align 8, !dbg !665
  call void @llvm.dbg.declare(metadata %struct.__pedigree_frame** %frame, metadata !666, metadata !DIExpression()), !dbg !667
  %3 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.addr, align 8, !dbg !668
  %call = call noalias %struct.__pedigree_frame* @push_pedigree_frame(%struct.__cilkrts_worker* noundef %3) #8, !dbg !669
  store %struct.__pedigree_frame* %call, %struct.__pedigree_frame** %frame, align 8, !dbg !667
  %4 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !670
  %5 = bitcast %struct.__pedigree_frame* %4 to i8*, !dbg !670
  %6 = load i8**, i8*** %child_extension.addr, align 8, !dbg !671
  store i8* %5, i8** %6, align 8, !dbg !672
  call void @llvm.dbg.declare(metadata %struct.__pedigree_frame** %parent_frame, metadata !673, metadata !DIExpression()), !dbg !674
  %7 = load i8**, i8*** %parent_extension.addr, align 8, !dbg !675
  %8 = load i8*, i8** %7, align 8, !dbg !676
  %9 = bitcast i8* %8 to %struct.__pedigree_frame*, !dbg !677
  store %struct.__pedigree_frame* %9, %struct.__pedigree_frame** %parent_frame, align 8, !dbg !674
  %10 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %parent_frame, align 8, !dbg !678
  %rank = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %10, i32 0, i32 1, !dbg !679
  %11 = load i64, i64* %rank, align 8, !dbg !679
  %12 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !680
  %pedigree = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %12, i32 0, i32 0, !dbg !681
  %rank1 = getelementptr inbounds %struct.__cilkrts_pedigree, %struct.__cilkrts_pedigree* %pedigree, i32 0, i32 0, !dbg !682
  store i64 %11, i64* %rank1, align 8, !dbg !683
  %13 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %parent_frame, align 8, !dbg !684
  %pedigree2 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %13, i32 0, i32 0, !dbg !685
  %14 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !686
  %pedigree3 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %14, i32 0, i32 0, !dbg !687
  %parent = getelementptr inbounds %struct.__cilkrts_pedigree, %struct.__cilkrts_pedigree* %pedigree3, i32 0, i32 1, !dbg !688
  store %struct.__cilkrts_pedigree* %pedigree2, %struct.__cilkrts_pedigree** %parent, align 8, !dbg !689
  %15 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !690
  %rank4 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %15, i32 0, i32 1, !dbg !691
  store i64 0, i64* %rank4, align 8, !dbg !692
  %16 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %parent_frame, align 8, !dbg !693
  %dprng_depth = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %16, i32 0, i32 3, !dbg !694
  %17 = load i64, i64* %dprng_depth, align 8, !dbg !694
  %add = add nsw i64 %17, 1, !dbg !695
  %18 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !696
  %dprng_depth5 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %18, i32 0, i32 3, !dbg !697
  store i64 %add, i64* %dprng_depth5, align 8, !dbg !698
  call void @llvm.dbg.declare(metadata i64* %parent_dprng_dotproduct, metadata !699, metadata !DIExpression()), !dbg !700
  %19 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %parent_frame, align 8, !dbg !701
  %dprng_dotproduct = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %19, i32 0, i32 2, !dbg !702
  %20 = load i64, i64* %dprng_dotproduct, align 8, !dbg !702
  store i64 %20, i64* %parent_dprng_dotproduct, align 8, !dbg !700
  %21 = load i64, i64* %parent_dprng_dotproduct, align 8, !dbg !703
  %22 = load i64*, i64** @__pedigree_dprng_m_array, align 8, !dbg !704
  %23 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !705
  %dprng_depth6 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %23, i32 0, i32 3, !dbg !706
  %24 = load i64, i64* %dprng_depth6, align 8, !dbg !706
  %arrayidx = getelementptr inbounds i64, i64* %22, i64 %24, !dbg !704
  %25 = load i64, i64* %arrayidx, align 8, !dbg !704
  %call7 = call i64 @__cilkrts_dprng_sum_mod_p(i64 noundef %21, i64 noundef %25) #8, !dbg !707
  %26 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !708
  %dprng_dotproduct8 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %26, i32 0, i32 2, !dbg !709
  store i64 %call7, i64* %dprng_dotproduct8, align 8, !dbg !710
  %27 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %parent_frame, align 8, !dbg !711
  %rank9 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %27, i32 0, i32 1, !dbg !712
  %28 = load i64, i64* %rank9, align 8, !dbg !713
  %inc = add nsw i64 %28, 1, !dbg !713
  store i64 %inc, i64* %rank9, align 8, !dbg !713
  %29 = load i64, i64* %parent_dprng_dotproduct, align 8, !dbg !714
  %30 = load i64*, i64** @__pedigree_dprng_m_array, align 8, !dbg !715
  %31 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %parent_frame, align 8, !dbg !716
  %dprng_depth10 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %31, i32 0, i32 3, !dbg !717
  %32 = load i64, i64* %dprng_depth10, align 8, !dbg !717
  %arrayidx11 = getelementptr inbounds i64, i64* %30, i64 %32, !dbg !715
  %33 = load i64, i64* %arrayidx11, align 8, !dbg !715
  %call12 = call i64 @__cilkrts_dprng_sum_mod_p(i64 noundef %29, i64 noundef %33) #8, !dbg !718
  %34 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %parent_frame, align 8, !dbg !719
  %dprng_dotproduct13 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %34, i32 0, i32 2, !dbg !720
  store i64 %call12, i64* %dprng_dotproduct13, align 8, !dbg !721
  ret void, !dbg !722
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias %struct.__pedigree_frame* @push_pedigree_frame(%struct.__cilkrts_worker* noundef %w) #4 !dbg !723 {
entry:
  %w.addr.i = alloca %struct.__cilkrts_worker*, align 8
  %size.addr.i = alloca i64, align 8
  %ext_stack_ptr.i = alloca i8*, align 8
  %w.addr = alloca %struct.__cilkrts_worker*, align 8
  store %struct.__cilkrts_worker* %w, %struct.__cilkrts_worker** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.addr, metadata !726, metadata !DIExpression()), !dbg !727
  %0 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.addr, align 8, !dbg !728
  store %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %w.addr.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.addr.i, metadata !729, metadata !DIExpression()), !dbg !733
  store i64 40, i64* %size.addr.i, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !735, metadata !DIExpression()), !dbg !736
  call void @llvm.dbg.declare(metadata i8** %ext_stack_ptr.i, metadata !737, metadata !DIExpression()), !dbg !738
  %1 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.addr.i, align 8, !dbg !739
  %ext_stack.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %1, i32 0, i32 9, !dbg !740
  %2 = load i8*, i8** %ext_stack.i, align 8, !dbg !740
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !741
  %idx.neg.i = sub i64 0, %3, !dbg !742
  %add.ptr.i = getelementptr inbounds i8, i8* %2, i64 %idx.neg.i, !dbg !742
  store i8* %add.ptr.i, i8** %ext_stack_ptr.i, align 8, !dbg !738
  %4 = load i8*, i8** %ext_stack_ptr.i, align 8, !dbg !743
  %5 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.addr.i, align 8, !dbg !744
  %ext_stack1.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %5, i32 0, i32 9, !dbg !745
  store i8* %4, i8** %ext_stack1.i, align 8, !dbg !746
  %6 = load i8*, i8** %ext_stack_ptr.i, align 8, !dbg !747
  %7 = bitcast i8* %6 to %struct.__pedigree_frame*, !dbg !748
  ret %struct.__pedigree_frame* %7, !dbg !749
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__cilkrts_dprng_sum_mod_p(i64 noundef %a, i64 noundef %b) #4 !dbg !750 {
entry:
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %z = alloca i64, align 8
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !753, metadata !DIExpression()), !dbg !754
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !755, metadata !DIExpression()), !dbg !756
  call void @llvm.dbg.declare(metadata i64* %z, metadata !757, metadata !DIExpression()), !dbg !758
  %0 = load i64, i64* %a.addr, align 8, !dbg !759
  %1 = load i64, i64* %b.addr, align 8, !dbg !760
  %add = add i64 %0, %1, !dbg !761
  store i64 %add, i64* %z, align 8, !dbg !758
  %2 = load i64, i64* %z, align 8, !dbg !762
  %3 = load i64, i64* %a.addr, align 8, !dbg !764
  %cmp = icmp ult i64 %2, %3, !dbg !765
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !766

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %z, align 8, !dbg !767
  %cmp1 = icmp uge i64 %4, -59, !dbg !768
  br i1 %cmp1, label %if.then, label %if.end, !dbg !769

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i64, i64* %z, align 8, !dbg !770
  %sub = sub i64 %5, -59, !dbg !770
  store i64 %sub, i64* %z, align 8, !dbg !770
  br label %if.end, !dbg !772

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %6 = load i64, i64* %z, align 8, !dbg !773
  ret i64 %6, !dbg !774
}

; Function Attrs: noinline nounwind optnone uwtable
define available_externally dso_local void @__cilkrts_extend_return_from_spawn(%struct.__cilkrts_worker* noundef %w, i8** noundef %extension) #4 !dbg !775 {
entry:
  %w.addr = alloca %struct.__cilkrts_worker*, align 8
  %extension.addr = alloca i8**, align 8
  store %struct.__cilkrts_worker* %w, %struct.__cilkrts_worker** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.addr, metadata !778, metadata !DIExpression()), !dbg !779
  store i8** %extension, i8*** %extension.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %extension.addr, metadata !780, metadata !DIExpression()), !dbg !781
  %0 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.addr, align 8, !dbg !782
  call void @pop_pedigree_frame(%struct.__cilkrts_worker* noundef %0) #8, !dbg !783
  ret void, !dbg !784
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @pop_pedigree_frame(%struct.__cilkrts_worker* noundef %w) #4 !dbg !785 {
entry:
  %w.addr.i = alloca %struct.__cilkrts_worker*, align 8
  %size.addr.i = alloca i64, align 8
  %ext_stack_ptr.i = alloca i8*, align 8
  %w.addr = alloca %struct.__cilkrts_worker*, align 8
  store %struct.__cilkrts_worker* %w, %struct.__cilkrts_worker** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.addr, metadata !788, metadata !DIExpression()), !dbg !789
  %0 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.addr, align 8, !dbg !790
  store %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %w.addr.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.addr.i, metadata !791, metadata !DIExpression()), !dbg !793
  store i64 40, i64* %size.addr.i, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !795, metadata !DIExpression()), !dbg !796
  call void @llvm.dbg.declare(metadata i8** %ext_stack_ptr.i, metadata !797, metadata !DIExpression()), !dbg !798
  %1 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.addr.i, align 8, !dbg !799
  %ext_stack.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %1, i32 0, i32 9, !dbg !800
  %2 = load i8*, i8** %ext_stack.i, align 8, !dbg !800
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !801
  %add.ptr.i = getelementptr inbounds i8, i8* %2, i64 %3, !dbg !802
  store i8* %add.ptr.i, i8** %ext_stack_ptr.i, align 8, !dbg !798
  %4 = load i8*, i8** %ext_stack_ptr.i, align 8, !dbg !803
  %5 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.addr.i, align 8, !dbg !804
  %ext_stack1.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %5, i32 0, i32 9, !dbg !805
  store i8* %4, i8** %ext_stack1.i, align 8, !dbg !806
  %6 = load i8*, i8** %ext_stack_ptr.i, align 8, !dbg !807
  ret void, !dbg !808
}

; Function Attrs: noinline nounwind optnone uwtable
define available_externally dso_local void @__cilkrts_extend_sync(i8** noundef %extension) #4 !dbg !809 {
entry:
  %extension.addr = alloca i8**, align 8
  %frame = alloca %struct.__pedigree_frame*, align 8
  store i8** %extension, i8*** %extension.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %extension.addr, metadata !812, metadata !DIExpression()), !dbg !813
  call void @llvm.dbg.declare(metadata %struct.__pedigree_frame** %frame, metadata !814, metadata !DIExpression()), !dbg !815
  %0 = load i8**, i8*** %extension.addr, align 8, !dbg !816
  %1 = load i8*, i8** %0, align 8, !dbg !817
  %2 = bitcast i8* %1 to %struct.__pedigree_frame*, !dbg !818
  store %struct.__pedigree_frame* %2, %struct.__pedigree_frame** %frame, align 8, !dbg !815
  %3 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !819
  %rank = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %3, i32 0, i32 1, !dbg !820
  %4 = load i64, i64* %rank, align 8, !dbg !821
  %inc = add nsw i64 %4, 1, !dbg !821
  store i64 %inc, i64* %rank, align 8, !dbg !821
  %5 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !822
  %dprng_dotproduct = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %5, i32 0, i32 2, !dbg !823
  %6 = load i64, i64* %dprng_dotproduct, align 8, !dbg !823
  %7 = load i64*, i64** @__pedigree_dprng_m_array, align 8, !dbg !824
  %8 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !825
  %dprng_depth = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %8, i32 0, i32 3, !dbg !826
  %9 = load i64, i64* %dprng_depth, align 8, !dbg !826
  %arrayidx = getelementptr inbounds i64, i64* %7, i64 %9, !dbg !824
  %10 = load i64, i64* %arrayidx, align 8, !dbg !824
  %call = call i64 @__cilkrts_dprng_sum_mod_p(i64 noundef %6, i64 noundef %10) #8, !dbg !827
  %11 = load %struct.__pedigree_frame*, %struct.__pedigree_frame** %frame, align 8, !dbg !828
  %dprng_dotproduct1 = getelementptr inbounds %struct.__pedigree_frame, %struct.__pedigree_frame* %11, i32 0, i32 2, !dbg !829
  store i64 %call, i64* %dprng_dotproduct1, align 8, !dbg !830
  ret void, !dbg !831
}

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i8* @llvm.frameaddress.p0i8(i32 immarg) #6

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #7

; Function Attrs: nounwind
declare i32 @llvm.eh.sjlj.setjmp(i8*) #8

; Function Attrs: nounwind
declare dso_local void @__cilkrts_internal_invoke_cilkified_root(%struct.__cilkrts_stack_frame* noundef) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sanitizer_finish_switch_fiber() #4 !dbg !832 {
entry:
  ret void, !dbg !835
}

; Function Attrs: nounwind
declare dso_local void @cilkrts_alert(i32 noundef, %struct.__cilkrts_worker* noundef, i8* noundef, ...) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %sf) #4 !dbg !836 {
entry:
  %sf.addr = alloca %struct.__cilkrts_stack_frame*, align 8
  %atomic-temp = alloca %struct.__cilkrts_worker*, align 8
  store %struct.__cilkrts_stack_frame* %sf, %struct.__cilkrts_stack_frame** %sf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr, metadata !839, metadata !DIExpression()), !dbg !840
  %0 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr, align 8, !dbg !841
  %worker = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %0, i32 0, i32 3, !dbg !842
  %1 = bitcast %struct.__cilkrts_worker** %worker to i64*, !dbg !843
  %2 = bitcast %struct.__cilkrts_worker** %atomic-temp to i64*, !dbg !843
  %3 = load atomic i64, i64* %1 monotonic, align 8, !dbg !843
  store i64 %3, i64* %2, align 8, !dbg !843
  %4 = bitcast i64* %2 to %struct.__cilkrts_worker**, !dbg !843
  %5 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %4, align 8, !dbg !843
  ret %struct.__cilkrts_worker* %5, !dbg !844
}

; Function Attrs: noreturn nounwind
declare dso_local void @__cilkrts_sync(%struct.__cilkrts_stack_frame* noundef) #10

; Function Attrs: nounwind
declare dso_local void @__cilkrts_check_exception_raise(%struct.__cilkrts_stack_frame* noundef) #9

; Function Attrs: nounwind
declare dso_local void @__cilkrts_internal_exit_cilkified_root(%struct.global_state* noundef, %struct.__cilkrts_stack_frame* noundef) #9

; Function Attrs: nounwind
declare dso_local void @Cilk_set_return(%struct.__cilkrts_worker* noundef) #9

; Function Attrs: nounwind
declare dso_local void @Cilk_exception_handler(i8* noundef) #9

; Function Attrs: nounwind
declare dso_local void @__cilkrts_cleanup_fiber(%struct.__cilkrts_stack_frame* noundef, i32 noundef) #9

; Function Attrs: alwaysinline nounwind
declare i8* @__cilkrts_reducer_lookup(i8*) #11

; Function Attrs: alwaysinline nounwind
declare void @__cilkrts_reducer_register_32(i8*, i32, i8*, i8*) #11

; Function Attrs: alwaysinline nounwind
declare void @__cilkrts_reducer_register_64(i8*, i64, i8*, i8*) #11

; Function Attrs: alwaysinline nounwind
declare void @__cilkrts_reducer_unregister(i8*) #11

; Function Attrs: noinline uwtable
define internal fastcc void @_Z4loopPA10_iS0_.outline_pfor.body.entry18.otd2([10 x i32]** align 8 %B.addr.otd2, [10 x i32]** align 8 %A.addr.otd2, i32* align 4 %i.otd2, i32 %add17.otd2) unnamed_addr #12 {
pfor.detach15.otd2:
  %sf.addr.i.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i.i = alloca %struct.__cilkrts_worker*, align 8
  %parent.i.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %tail.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %atomic-temp.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %.atomictmp.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %exc.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %atomic-temp8.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %sf.addr.i6 = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i1 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i2 = alloca %struct.__cilkrts_worker*, align 8
  %parent.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %tail.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %atomic-temp.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %.atomictmp.i3 = alloca %struct.__cilkrts_stack_frame**, align 8
  %sf.addr.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i = alloca %struct.__cilkrts_worker*, align 8
  %.atomictmp.i = alloca %struct.__cilkrts_worker*, align 8
  %j.otd2 = alloca i32, align 4
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i, metadata !845, metadata !DIExpression()), !dbg !847
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i, metadata !848, metadata !DIExpression()), !dbg !849
  %0 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** @__cilkrts_tls_worker, align 8, !dbg !850
  store %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %w.i, align 8, !dbg !849
  %1 = load i32, i32* @alert_level, align 4, !dbg !852
  %2 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !853
  %flags.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %2, i32 0, i32 0, !dbg !854
  store i32 0, i32* %flags.i, align 8, !dbg !855
  %3 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !856
  %magic.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %3, i32 0, i32 1, !dbg !857
  store i32 25942344, i32* %magic.i, align 4, !dbg !858
  %4 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i, align 8, !dbg !859
  %current_stack_frame.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %4, i32 0, i32 4, !dbg !860
  %5 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %current_stack_frame.i, align 32, !dbg !860
  %6 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !861
  %call_parent.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %6, i32 0, i32 2, !dbg !862
  store %struct.__cilkrts_stack_frame* %5, %struct.__cilkrts_stack_frame** %call_parent.i, align 8, !dbg !863
  %7 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !864
  %worker.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %7, i32 0, i32 3, !dbg !865
  %8 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i, align 8, !dbg !866
  store %struct.__cilkrts_worker* %8, %struct.__cilkrts_worker** %.atomictmp.i, align 8, !dbg !867
  %9 = bitcast %struct.__cilkrts_worker** %worker.i to i64*, !dbg !867
  %10 = bitcast %struct.__cilkrts_worker** %.atomictmp.i to i64*, !dbg !867
  %11 = load i64, i64* %10, align 8, !dbg !867
  store atomic i64 %11, i64* %9 monotonic, align 8, !dbg !867
  %12 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !868
  %13 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i, align 8, !dbg !869
  %current_stack_frame1.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %13, i32 0, i32 4, !dbg !870
  store %struct.__cilkrts_stack_frame* %12, %struct.__cilkrts_stack_frame** %current_stack_frame1.i, align 32, !dbg !871
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i1, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i1, metadata !872, metadata !DIExpression()) #8, !dbg !874
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i2, metadata !875, metadata !DIExpression()) #8, !dbg !876
  %14 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i1, align 8, !dbg !877
  %call.i = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %14) #8, !dbg !878
  store %struct.__cilkrts_worker* %call.i, %struct.__cilkrts_worker** %w.i2, align 8, !dbg !876
  %15 = load i32, i32* @alert_level, align 4, !dbg !879
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %parent.i, metadata !880, metadata !DIExpression()) #8, !dbg !881
  %16 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i1, align 8, !dbg !882
  %call_parent.i4 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %16, i32 0, i32 2, !dbg !883
  %17 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %call_parent.i4, align 8, !dbg !883
  store %struct.__cilkrts_stack_frame* %17, %struct.__cilkrts_stack_frame** %parent.i, align 8, !dbg !881
  %18 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !884
  %tobool1.i = trunc i8 %18 to i1, !dbg !884
  br i1 %tobool1.i, label %if.then.i, label %__cilkrts_detach.exit, !dbg !886

if.then.i:                                        ; preds = %pfor.detach15.otd2
  %19 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i2, align 8, !dbg !887
  %20 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i, align 8, !dbg !889
  %extension.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %20, i32 0, i32 5, !dbg !890
  %21 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i2, align 8, !dbg !891
  %extension2.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %21, i32 0, i32 8, !dbg !892
  call void @__cilkrts_extend_spawn(%struct.__cilkrts_worker* noundef %19, i8** noundef %extension.i, i8** noundef %extension2.i) #8, !dbg !893
  br label %__cilkrts_detach.exit, !dbg !894

__cilkrts_detach.exit:                            ; preds = %pfor.detach15.otd2, %if.then.i
  %22 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i1, align 8, !dbg !895
  %flags.i5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %22, i32 0, i32 0, !dbg !896
  %23 = load i32, i32* %flags.i5, align 8, !dbg !897
  %or.i = or i32 %23, 4, !dbg !897
  store i32 %or.i, i32* %flags.i5, align 8, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame*** %tail.i, metadata !898, metadata !DIExpression()) #8, !dbg !899
  %24 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i2, align 8, !dbg !900
  %tail3.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %24, i32 0, i32 1, !dbg !901
  %25 = bitcast %struct.__cilkrts_stack_frame*** %tail3.i to i64*, !dbg !902
  %26 = bitcast %struct.__cilkrts_stack_frame*** %atomic-temp.i to i64*, !dbg !902
  %27 = load atomic i64, i64* %25 monotonic, align 8, !dbg !902
  store i64 %27, i64* %26, align 8, !dbg !902
  %28 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %atomic-temp.i, align 8, !dbg !902
  store %struct.__cilkrts_stack_frame** %28, %struct.__cilkrts_stack_frame*** %tail.i, align 8, !dbg !899
  %29 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i, align 8, !dbg !903
  %30 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i, align 8, !dbg !904
  %incdec.ptr.i = getelementptr inbounds %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %30, i32 1, !dbg !904
  store %struct.__cilkrts_stack_frame** %incdec.ptr.i, %struct.__cilkrts_stack_frame*** %tail.i, align 8, !dbg !904
  store %struct.__cilkrts_stack_frame* %29, %struct.__cilkrts_stack_frame** %30, align 8, !dbg !905
  %31 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i2, align 8, !dbg !906
  %tail4.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %31, i32 0, i32 1, !dbg !907
  %32 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i, align 8, !dbg !908
  store %struct.__cilkrts_stack_frame** %32, %struct.__cilkrts_stack_frame*** %.atomictmp.i3, align 8, !dbg !909
  %33 = bitcast %struct.__cilkrts_stack_frame*** %tail4.i to i64*, !dbg !909
  %34 = bitcast %struct.__cilkrts_stack_frame*** %.atomictmp.i3 to i64*, !dbg !909
  %35 = load i64, i64* %34, align 8, !dbg !909
  store atomic i64 %35, i64* %33 release, align 8, !dbg !909
  br label %pfor.body.entry18.otd2

pfor.body.entry18.otd2:                           ; preds = %__cilkrts_detach.exit
  %36 = bitcast i32* %j.otd2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36)
  store i32 %add17.otd2, i32* %j.otd2, align 4
  br label %pfor.body19.otd2

pfor.body19.otd2:                                 ; preds = %pfor.body.entry18.otd2
  %37 = load [10 x i32]*, [10 x i32]** %B.addr.otd2, align 8
  %38 = load i32, i32* %j.otd2, align 4
  %idxprom.otd2 = sext i32 %38 to i64
  %arrayidx.otd2 = getelementptr inbounds [10 x i32], [10 x i32]* %37, i64 %idxprom.otd2
  %arrayidx20.otd2 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx.otd2, i64 0, i64 0
  %39 = load i32, i32* %arrayidx20.otd2, align 4
  %40 = load [10 x i32]*, [10 x i32]** %B.addr.otd2, align 8
  %41 = load i32, i32* %j.otd2, align 4
  %add21.otd2 = add nsw i32 %41, 1
  %idxprom22.otd2 = sext i32 %add21.otd2 to i64
  %arrayidx23.otd2 = getelementptr inbounds [10 x i32], [10 x i32]* %40, i64 %idxprom22.otd2
  %arrayidx24.otd2 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx23.otd2, i64 0, i64 0
  %42 = load i32, i32* %arrayidx24.otd2, align 4
  %add25.otd2 = add nsw i32 %39, %42
  %43 = load [10 x i32]*, [10 x i32]** %A.addr.otd2, align 8
  %44 = load i32, i32* %i.otd2, align 4
  %idxprom26.otd2 = sext i32 %44 to i64
  %arrayidx27.otd2 = getelementptr inbounds [10 x i32], [10 x i32]* %43, i64 %idxprom26.otd2
  %45 = load i32, i32* %j.otd2, align 4
  %idxprom28.otd2 = sext i32 %45 to i64
  %arrayidx29.otd2 = getelementptr inbounds [10 x i32], [10 x i32]* %arrayidx27.otd2, i64 0, i64 %idxprom28.otd2
  store i32 %add25.otd2, i32* %arrayidx29.otd2, align 4
  br label %pfor.preattach.otd2

pfor.preattach.otd2:                              ; preds = %pfor.body19.otd2
  %46 = bitcast i32* %j.otd2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46)
  br label %pfor.inc.otd2

pfor.inc.otd2:                                    ; preds = %pfor.preattach.otd2
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i6, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i6, metadata !910, metadata !DIExpression()) #8, !dbg !912
  %47 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i6, align 8, !dbg !913
  store %struct.__cilkrts_stack_frame* %47, %struct.__cilkrts_stack_frame** %sf.addr.i.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i, metadata !914, metadata !DIExpression()) #8, !dbg !916
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i.i, metadata !918, metadata !DIExpression()) #8, !dbg !919
  %48 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i, align 8, !dbg !920
  %call.i.i = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %48) #8, !dbg !921
  store %struct.__cilkrts_worker* %call.i.i, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !919
  %49 = load i32, i32* @alert_level, align 4, !dbg !922
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %parent.i.i, metadata !923, metadata !DIExpression()) #8, !dbg !924
  %50 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i, align 8, !dbg !925
  %call_parent.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %50, i32 0, i32 2, !dbg !926
  %51 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %call_parent.i.i, align 8, !dbg !926
  store %struct.__cilkrts_stack_frame* %51, %struct.__cilkrts_stack_frame** %parent.i.i, align 8, !dbg !924
  %52 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i.i, align 8, !dbg !927
  %53 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !928
  %current_stack_frame.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %53, i32 0, i32 4, !dbg !929
  store %struct.__cilkrts_stack_frame* %52, %struct.__cilkrts_stack_frame** %current_stack_frame.i.i, align 32, !dbg !930
  %54 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !931
  %tobool1.i.i = trunc i8 %54 to i1, !dbg !931
  br i1 %tobool1.i.i, label %if.then.i.i, label %if.end.i.i, !dbg !933

if.then.i.i:                                      ; preds = %pfor.inc.otd2
  %55 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !934
  %56 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !936
  %extension.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %56, i32 0, i32 8, !dbg !937
  call void @__cilkrts_extend_return_from_spawn(%struct.__cilkrts_worker* noundef %55, i8** noundef %extension.i.i) #8, !dbg !938
  %57 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i.i, align 8, !dbg !939
  %extension2.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %57, i32 0, i32 5, !dbg !940
  %58 = load i8*, i8** %extension2.i.i, align 8, !dbg !940
  %59 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !941
  %extension3.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %59, i32 0, i32 8, !dbg !942
  store i8* %58, i8** %extension3.i.i, align 64, !dbg !943
  br label %if.end.i.i, !dbg !944

if.end.i.i:                                       ; preds = %if.then.i.i, %pfor.inc.otd2
  %60 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i, align 8, !dbg !945
  %call_parent4.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %60, i32 0, i32 2, !dbg !946
  store %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %call_parent4.i.i, align 8, !dbg !947
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame*** %tail.i.i, metadata !948, metadata !DIExpression()) #8, !dbg !950
  %61 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !951
  %tail5.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %61, i32 0, i32 1, !dbg !952
  %62 = bitcast %struct.__cilkrts_stack_frame*** %tail5.i.i to i64*, !dbg !953
  %63 = bitcast %struct.__cilkrts_stack_frame*** %atomic-temp.i.i to i64*, !dbg !953
  %64 = load atomic i64, i64* %62 monotonic, align 8, !dbg !953
  store i64 %64, i64* %63, align 8, !dbg !953
  %65 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %atomic-temp.i.i, align 8, !dbg !953
  store %struct.__cilkrts_stack_frame** %65, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !950
  %66 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !954
  %incdec.ptr.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %66, i32 -1, !dbg !954
  store %struct.__cilkrts_stack_frame** %incdec.ptr.i.i, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !954
  %67 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !955
  %tail6.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %67, i32 0, i32 1, !dbg !956
  %68 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !957
  store %struct.__cilkrts_stack_frame** %68, %struct.__cilkrts_stack_frame*** %.atomictmp.i.i, align 8, !dbg !958
  %69 = bitcast %struct.__cilkrts_stack_frame*** %tail6.i.i to i64*, !dbg !958
  %70 = bitcast %struct.__cilkrts_stack_frame*** %.atomictmp.i.i to i64*, !dbg !958
  %71 = load i64, i64* %70, align 8, !dbg !958
  store atomic i64 %71, i64* %69 seq_cst, align 8, !dbg !958
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame*** %exc.i.i, metadata !959, metadata !DIExpression()) #8, !dbg !960
  %72 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !961
  %exc7.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %72, i32 0, i32 2, !dbg !962
  %73 = bitcast %struct.__cilkrts_stack_frame*** %exc7.i.i to i64*, !dbg !963
  %74 = bitcast %struct.__cilkrts_stack_frame*** %atomic-temp8.i.i to i64*, !dbg !963
  %75 = load atomic i64, i64* %73 seq_cst, align 16, !dbg !963
  store i64 %75, i64* %74, align 8, !dbg !963
  %76 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %atomic-temp8.i.i, align 8, !dbg !963
  store %struct.__cilkrts_stack_frame** %76, %struct.__cilkrts_stack_frame*** %exc.i.i, align 8, !dbg !960
  %77 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i, align 8, !dbg !964
  %flags.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %77, i32 0, i32 0, !dbg !965
  %78 = load i32, i32* %flags.i.i, align 8, !dbg !966
  %and9.i.i = and i32 %78, -5, !dbg !966
  store i32 %and9.i.i, i32* %flags.i.i, align 8, !dbg !966
  %79 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %exc.i.i, align 8, !dbg !967
  %80 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !969
  %cmp.i.i = icmp ugt %struct.__cilkrts_stack_frame** %79, %80, !dbg !970
  %conv.i.i = zext i1 %cmp.i.i to i32, !dbg !970
  %conv10.i.i = sext i32 %conv.i.i to i64, !dbg !967
  br i1 %cmp.i.i, label %if.then12.i.i, label %__cilk_helper_epilogue.exit, !dbg !971

if.then12.i.i:                                    ; preds = %if.end.i.i
  call void @Cilk_exception_handler(i8* noundef null) #8, !dbg !972
  br label %__cilk_helper_epilogue.exit, !dbg !974

__cilk_helper_epilogue.exit:                      ; preds = %if.end.i.i, %if.then12.i.i
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #13

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #13

; Function Attrs: noinline stealable uwtable
define internal fastcc void @_Z4loopPA10_iS0_.outline_pfor.body.entry.otd1([10 x i32]** align 8 %B.addr.otd1, [10 x i32]** align 8 %A.addr.otd1, i32 %add2.otd1) unnamed_addr #0 personality i32 (...)* @__cilk_personality_v0 {
pfor.detach.otd1:
  %sf.addr.i.i23 = alloca %struct.__cilkrts_stack_frame*, align 8
  %exn.addr.i.i = alloca i8*, align 8
  %w.i.i24 = alloca %struct.__cilkrts_worker*, align 8
  %parent.i.i25 = alloca %struct.__cilkrts_stack_frame*, align 8
  %tail.i.i26 = alloca %struct.__cilkrts_stack_frame**, align 8
  %atomic-temp.i.i27 = alloca %struct.__cilkrts_stack_frame**, align 8
  %.atomictmp.i.i28 = alloca %struct.__cilkrts_stack_frame**, align 8
  %exc.i.i29 = alloca %struct.__cilkrts_stack_frame**, align 8
  %atomic-temp11.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %sf.addr.i30 = alloca %struct.__cilkrts_stack_frame*, align 8
  %exn.addr.i = alloca i8*, align 8
  %sf.addr.i.i21 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i.i = alloca %struct.__cilkrts_worker*, align 8
  %parent.i.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %tail.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %atomic-temp.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %.atomictmp.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %exc.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %atomic-temp8.i.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %sf.addr.i22 = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i11 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i12 = alloca %struct.__cilkrts_worker*, align 8
  %parent.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %tail.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %atomic-temp.i = alloca %struct.__cilkrts_stack_frame**, align 8
  %.atomictmp.i13 = alloca %struct.__cilkrts_stack_frame**, align 8
  %sf.addr.i8 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i9 = alloca %struct.__cilkrts_worker*, align 8
  %.atomictmp.i = alloca %struct.__cilkrts_worker*, align 8
  %sf.addr.i.i2 = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i3 = alloca %struct.__cilkrts_stack_frame*, align 8
  %w.i = alloca %struct.__cilkrts_worker*, align 8
  %sf.addr.i.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %sf.addr.i = alloca %struct.__cilkrts_stack_frame*, align 8
  %res.i = alloca i32, align 4
  %i.otd1 = alloca i32, align 4
  %__init4.otd1 = alloca i32, align 4
  %__limit5.otd1 = alloca i32, align 4
  %__begin8.otd1 = alloca i32, align 4
  %__end9.otd1 = alloca i32, align 4
  %syncreg3.otd1 = call token @llvm.syncregion.start()
  %__cilkrts_sf = alloca %struct.__cilkrts_stack_frame, align 8
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i8, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i8, metadata !845, metadata !DIExpression()), !dbg !847
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i9, metadata !848, metadata !DIExpression()), !dbg !849
  %0 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** @__cilkrts_tls_worker, align 8, !dbg !850
  store %struct.__cilkrts_worker* %0, %struct.__cilkrts_worker** %w.i9, align 8, !dbg !849
  %1 = load i32, i32* @alert_level, align 4, !dbg !852
  %2 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i8, align 8, !dbg !853
  %flags.i10 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %2, i32 0, i32 0, !dbg !854
  store i32 0, i32* %flags.i10, align 8, !dbg !855
  %3 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i8, align 8, !dbg !856
  %magic.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %3, i32 0, i32 1, !dbg !857
  store i32 25942344, i32* %magic.i, align 4, !dbg !858
  %4 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i9, align 8, !dbg !859
  %current_stack_frame.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %4, i32 0, i32 4, !dbg !860
  %5 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %current_stack_frame.i, align 32, !dbg !860
  %6 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i8, align 8, !dbg !861
  %call_parent.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %6, i32 0, i32 2, !dbg !862
  store %struct.__cilkrts_stack_frame* %5, %struct.__cilkrts_stack_frame** %call_parent.i, align 8, !dbg !863
  %7 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i8, align 8, !dbg !864
  %worker.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %7, i32 0, i32 3, !dbg !865
  %8 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i9, align 8, !dbg !866
  store %struct.__cilkrts_worker* %8, %struct.__cilkrts_worker** %.atomictmp.i, align 8, !dbg !867
  %9 = bitcast %struct.__cilkrts_worker** %worker.i to i64*, !dbg !867
  %10 = bitcast %struct.__cilkrts_worker** %.atomictmp.i to i64*, !dbg !867
  %11 = load i64, i64* %10, align 8, !dbg !867
  store atomic i64 %11, i64* %9 monotonic, align 8, !dbg !867
  %12 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i8, align 8, !dbg !868
  %13 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i9, align 8, !dbg !869
  %current_stack_frame1.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %13, i32 0, i32 4, !dbg !870
  store %struct.__cilkrts_stack_frame* %12, %struct.__cilkrts_stack_frame** %current_stack_frame1.i, align 32, !dbg !871
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i11, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i11, metadata !872, metadata !DIExpression()) #8, !dbg !874
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i12, metadata !875, metadata !DIExpression()) #8, !dbg !876
  %14 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i11, align 8, !dbg !877
  %call.i14 = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %14) #8, !dbg !878
  store %struct.__cilkrts_worker* %call.i14, %struct.__cilkrts_worker** %w.i12, align 8, !dbg !876
  %15 = load i32, i32* @alert_level, align 4, !dbg !879
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %parent.i, metadata !880, metadata !DIExpression()) #8, !dbg !881
  %16 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i11, align 8, !dbg !882
  %call_parent.i15 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %16, i32 0, i32 2, !dbg !883
  %17 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %call_parent.i15, align 8, !dbg !883
  store %struct.__cilkrts_stack_frame* %17, %struct.__cilkrts_stack_frame** %parent.i, align 8, !dbg !881
  %18 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !884
  %tobool1.i16 = trunc i8 %18 to i1, !dbg !884
  br i1 %tobool1.i16, label %if.then.i18, label %__cilkrts_detach.exit, !dbg !886

if.then.i18:                                      ; preds = %pfor.detach.otd1
  %19 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i12, align 8, !dbg !887
  %20 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i, align 8, !dbg !889
  %extension.i17 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %20, i32 0, i32 5, !dbg !890
  %21 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i12, align 8, !dbg !891
  %extension2.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %21, i32 0, i32 8, !dbg !892
  call void @__cilkrts_extend_spawn(%struct.__cilkrts_worker* noundef %19, i8** noundef %extension.i17, i8** noundef %extension2.i) #8, !dbg !893
  br label %__cilkrts_detach.exit, !dbg !894

__cilkrts_detach.exit:                            ; preds = %pfor.detach.otd1, %if.then.i18
  %22 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i11, align 8, !dbg !895
  %flags.i19 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %22, i32 0, i32 0, !dbg !896
  %23 = load i32, i32* %flags.i19, align 8, !dbg !897
  %or.i = or i32 %23, 4, !dbg !897
  store i32 %or.i, i32* %flags.i19, align 8, !dbg !897
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame*** %tail.i, metadata !898, metadata !DIExpression()) #8, !dbg !899
  %24 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i12, align 8, !dbg !900
  %tail3.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %24, i32 0, i32 1, !dbg !901
  %25 = bitcast %struct.__cilkrts_stack_frame*** %tail3.i to i64*, !dbg !902
  %26 = bitcast %struct.__cilkrts_stack_frame*** %atomic-temp.i to i64*, !dbg !902
  %27 = load atomic i64, i64* %25 monotonic, align 8, !dbg !902
  store i64 %27, i64* %26, align 8, !dbg !902
  %28 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %atomic-temp.i, align 8, !dbg !902
  store %struct.__cilkrts_stack_frame** %28, %struct.__cilkrts_stack_frame*** %tail.i, align 8, !dbg !899
  %29 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i, align 8, !dbg !903
  %30 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i, align 8, !dbg !904
  %incdec.ptr.i = getelementptr inbounds %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %30, i32 1, !dbg !904
  store %struct.__cilkrts_stack_frame** %incdec.ptr.i, %struct.__cilkrts_stack_frame*** %tail.i, align 8, !dbg !904
  store %struct.__cilkrts_stack_frame* %29, %struct.__cilkrts_stack_frame** %30, align 8, !dbg !905
  %31 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i12, align 8, !dbg !906
  %tail4.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %31, i32 0, i32 1, !dbg !907
  %32 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i, align 8, !dbg !908
  store %struct.__cilkrts_stack_frame** %32, %struct.__cilkrts_stack_frame*** %.atomictmp.i13, align 8, !dbg !909
  %33 = bitcast %struct.__cilkrts_stack_frame*** %tail4.i to i64*, !dbg !909
  %34 = bitcast %struct.__cilkrts_stack_frame*** %.atomictmp.i13 to i64*, !dbg !909
  %35 = load i64, i64* %34, align 8, !dbg !909
  store atomic i64 %35, i64* %33 release, align 8, !dbg !909
  br label %pfor.body.entry.otd1

pfor.body.entry.otd1:                             ; preds = %__cilkrts_detach.exit
  %36 = bitcast i32* %i.otd1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36)
  %37 = bitcast i32* %__init4.otd1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37)
  %38 = bitcast i32* %__limit5.otd1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38)
  %39 = bitcast i32* %__begin8.otd1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39)
  %40 = bitcast i32* %__end9.otd1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40)
  store i32 %add2.otd1, i32* %i.otd1, align 4
  br label %pfor.body.otd1

pfor.body.otd1:                                   ; preds = %pfor.body.entry.otd1
  store i32 0, i32* %__init4.otd1, align 4
  store i32 10, i32* %__limit5.otd1, align 4
  %41 = load i32, i32* %__init4.otd1, align 4
  %42 = load i32, i32* %__limit5.otd1, align 4
  %cmp6.otd1 = icmp slt i32 %41, %42
  br i1 %cmp6.otd1, label %pfor.ph7.otd1, label %pfor.end.otd1

pfor.ph7.otd1:                                    ; preds = %pfor.body.otd1
  store i32 0, i32* %__begin8.otd1, align 4
  %43 = load i32, i32* %__limit5.otd1, align 4
  %44 = load i32, i32* %__init4.otd1, align 4
  %sub10.otd1 = sub nsw i32 %43, %44
  %sub11.otd1 = sub nsw i32 %sub10.otd1, 1
  %div12.otd1 = sdiv i32 %sub11.otd1, 1
  %add13.otd1 = add nsw i32 %div12.otd1, 1
  store i32 %add13.otd1, i32* %__end9.otd1, align 4
  br label %pfor.cond14.otd1

pfor.end.otd1:                                    ; preds = %.noexc, %pfor.body.otd1
  br label %pfor.preattach31.otd1

pfor.preattach31.otd1:                            ; preds = %pfor.end.otd1
  %45 = bitcast i32* %i.otd1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %45)
  %46 = bitcast i32* %__init4.otd1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46)
  %47 = bitcast i32* %__limit5.otd1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47)
  %48 = bitcast i32* %__begin8.otd1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %48)
  %49 = bitcast i32* %__end9.otd1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %49)
  br label %pfor.inc32.otd1

pfor.cond14.otd1:                                 ; preds = %pfor.inc.otd1, %pfor.ph7.otd1
  br label %pfor.detach15.otd1

pfor.detach15.otd1:                               ; preds = %pfor.cond14.otd1
  %50 = load i32, i32* %__init4.otd1, align 4
  %51 = load i32, i32* %__begin8.otd1, align 4
  %mul16.otd1 = mul nsw i32 %51, 1
  %add17.otd1 = add nsw i32 %50, %mul16.otd1
  %52 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52)
  %53 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53)
  %54 = bitcast i32* %res.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54)
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i, metadata !489, metadata !DIExpression()) #8, !dbg !493
  %55 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !494
  store %struct.__cilkrts_stack_frame* %55, %struct.__cilkrts_stack_frame** %sf.addr.i.i, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i, metadata !459, metadata !DIExpression()) #8, !dbg !495
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !497, metadata !DIExpression()) #8, !dbg !498
  %56 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i, align 8, !dbg !499
  %ctx.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %56, i32 0, i32 4, !dbg !500
  %arraydecay.i = getelementptr inbounds [5 x i8*], [5 x i8*]* %ctx.i, i64 0, i64 0, !dbg !501
  %57 = call i8* @llvm.frameaddress.p0i8(i32 0) #8, !dbg !501
  store i8* %57, i8** %arraydecay.i, align 8, !dbg !501
  %58 = call i8* @llvm.stacksave() #8, !dbg !501
  %59 = getelementptr inbounds i8*, i8** %arraydecay.i, i64 2, !dbg !501
  store i8* %58, i8** %59, align 8, !dbg !501
  %60 = bitcast i8** %arraydecay.i to i8*, !dbg !501
  %61 = call i32 @llvm.eh.sjlj.setjmp(i8* %60) #8, !dbg !501
  store i32 %61, i32* %res.i, align 4, !dbg !498
  %62 = load i32, i32* %res.i, align 4, !dbg !502
  %cmp.i = icmp ne i32 %62, 0, !dbg !504
  br i1 %cmp.i, label %if.then.i, label %__cilk_prepare_spawn.exit, !dbg !505

if.then.i:                                        ; preds = %pfor.detach15.otd1
  call void @sanitizer_finish_switch_fiber() #8, !dbg !506
  br label %__cilk_prepare_spawn.exit, !dbg !508

__cilk_prepare_spawn.exit:                        ; preds = %pfor.detach15.otd1, %if.then.i
  %63 = load i32, i32* %res.i, align 4, !dbg !509
  %64 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i to i8*, !dbg !510
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64), !dbg !510
  %65 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i to i8*, !dbg !510
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65), !dbg !510
  %66 = bitcast i32* %res.i to i8*, !dbg !510
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66), !dbg !510
  %67 = icmp eq i32 %63, 0
  br i1 %67, label %pfor.detach15.otd1.split, label %pfor.inc.otd1

pfor.detach15.otd1.split:                         ; preds = %__cilk_prepare_spawn.exit
  invoke fastcc void @_Z4loopPA10_iS0_.outline_pfor.body.entry18.otd2([10 x i32]** %B.addr.otd1, [10 x i32]** %A.addr.otd1, i32* %i.otd1, i32 %add17.otd1)
          to label %.noexc1 unwind label %cilkrts_cleanup

.noexc1:                                          ; preds = %pfor.detach15.otd1.split
  br label %pfor.inc.otd1

pfor.inc.otd1:                                    ; preds = %__cilk_prepare_spawn.exit, %.noexc1
  %68 = load i32, i32* %__begin8.otd1, align 4
  %inc.otd1 = add nsw i32 %68, 1
  store i32 %inc.otd1, i32* %__begin8.otd1, align 4
  %69 = load i32, i32* %__begin8.otd1, align 4
  %70 = load i32, i32* %__end9.otd1, align 4
  %cmp30.otd1 = icmp slt i32 %69, %70
  br i1 %cmp30.otd1, label %pfor.cond14.otd1, label %pfor.cond.cleanup.otd1, !llvm.loop !511

pfor.cond.cleanup.otd1:                           ; preds = %pfor.inc.otd1
  %71 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71)
  %72 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72)
  %73 = bitcast %struct.__cilkrts_worker** %w.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73)
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i3, metadata !513, metadata !DIExpression()), !dbg !515
  %74 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8, !dbg !516
  %flags.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %74, i32 0, i32 0, !dbg !518
  %75 = load i32, i32* %flags.i, align 8, !dbg !518
  %and.i = and i32 %75, 2, !dbg !519
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !519
  br i1 %tobool.i, label %if.then.i4, label %lor.lhs.false.i, !dbg !520

lor.lhs.false.i:                                  ; preds = %pfor.cond.cleanup.otd1
  %76 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !521
  %tobool1.i = trunc i8 %76 to i1, !dbg !521
  br i1 %tobool1.i, label %if.then.i4, label %__cilk_sync.exit, !dbg !522

if.then.i4:                                       ; preds = %lor.lhs.false.i, %pfor.cond.cleanup.otd1
  %77 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8, !dbg !523
  %flags2.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %77, i32 0, i32 0, !dbg !526
  %78 = load i32, i32* %flags2.i, align 8, !dbg !526
  %and3.i = and i32 %78, 2, !dbg !527
  %tobool4.i = icmp ne i32 %and3.i, 0, !dbg !527
  br i1 %tobool4.i, label %if.then5.i, label %if.end12.i, !dbg !528

if.then5.i:                                       ; preds = %if.then.i4
  %79 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8, !dbg !529
  %ctx.i5 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %79, i32 0, i32 4, !dbg !532
  %arraydecay.i6 = getelementptr inbounds [5 x i8*], [5 x i8*]* %ctx.i5, i64 0, i64 0, !dbg !533
  %80 = call i8* @llvm.frameaddress.p0i8(i32 0), !dbg !533
  store i8* %80, i8** %arraydecay.i6, align 8, !dbg !533
  %81 = call i8* @llvm.stacksave(), !dbg !533
  %82 = getelementptr inbounds i8*, i8** %arraydecay.i6, i64 2, !dbg !533
  store i8* %81, i8** %82, align 8, !dbg !533
  %83 = bitcast i8** %arraydecay.i6 to i8*, !dbg !533
  %84 = call i32 @llvm.eh.sjlj.setjmp(i8* %83), !dbg !533
  %cmp.i7 = icmp eq i32 %84, 0, !dbg !534
  br i1 %cmp.i7, label %if.then6.i, label %if.else.i, !dbg !535

if.then6.i:                                       ; preds = %if.then5.i
  %85 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8, !dbg !536
  store %struct.__cilkrts_stack_frame* %85, %struct.__cilkrts_stack_frame** %sf.addr.i.i2, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i2, metadata !459, metadata !DIExpression()), !dbg !538
  %86 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8, !dbg !540
  call void @__cilkrts_sync(%struct.__cilkrts_stack_frame* noundef %86) #14, !dbg !541
  unreachable, !dbg !541

if.else.i:                                        ; preds = %if.then5.i
  call void @sanitizer_finish_switch_fiber() #8, !dbg !542
  %87 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8, !dbg !544
  %flags7.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %87, i32 0, i32 0, !dbg !546
  %88 = load i32, i32* %flags7.i, align 8, !dbg !546
  %and8.i = and i32 %88, 8, !dbg !547
  %tobool9.i = icmp ne i32 %and8.i, 0, !dbg !547
  br i1 %tobool9.i, label %if.then10.i, label %if.end.i, !dbg !548

if.then10.i:                                      ; preds = %if.else.i
  %89 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8, !dbg !549
  call void @__cilkrts_check_exception_raise(%struct.__cilkrts_stack_frame* noundef %89), !dbg !551
  br label %if.end.i, !dbg !552

if.end.i:                                         ; preds = %if.then10.i, %if.else.i
  br label %if.end12.i, !dbg !553

if.end12.i:                                       ; preds = %if.end.i, %if.then.i4
  %90 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !554
  %tobool13.i = trunc i8 %90 to i1, !dbg !554
  br i1 %tobool13.i, label %if.then14.i, label %if.end15.i, !dbg !556

if.then14.i:                                      ; preds = %if.end12.i
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i, metadata !557, metadata !DIExpression()), !dbg !559
  %91 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i3, align 8, !dbg !560
  %call.i = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %91) #8, !dbg !561
  store %struct.__cilkrts_worker* %call.i, %struct.__cilkrts_worker** %w.i, align 8, !dbg !559
  %92 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i, align 8, !dbg !562
  %extension.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %92, i32 0, i32 8, !dbg !563
  call void @__cilkrts_extend_sync(i8** noundef %extension.i) #8, !dbg !564
  br label %if.end15.i, !dbg !565

if.end15.i:                                       ; preds = %if.then14.i, %if.end12.i
  br label %__cilk_sync.exit, !dbg !566

__cilk_sync.exit:                                 ; preds = %lor.lhs.false.i, %if.end15.i
  %93 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i.i2 to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93), !dbg !567
  %94 = bitcast %struct.__cilkrts_stack_frame** %sf.addr.i3 to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94), !dbg !567
  %95 = bitcast %struct.__cilkrts_worker** %w.i to i8*, !dbg !567
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95), !dbg !567
  br label %.noexc, !dbg !567

sync.continue.otd1:                               ; No predecessors!
  invoke void @llvm.sync.unwind(token %syncreg3.otd1)
          to label %.noexc unwind label %cilkrts_cleanup

.noexc:                                           ; preds = %__cilk_sync.exit, %sync.continue.otd1
  br label %pfor.end.otd1

pfor.inc32.otd1:                                  ; preds = %pfor.preattach31.otd1
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i22, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i22, metadata !910, metadata !DIExpression()) #8, !dbg !912
  %96 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i22, align 8, !dbg !913
  store %struct.__cilkrts_stack_frame* %96, %struct.__cilkrts_stack_frame** %sf.addr.i.i21, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i21, metadata !914, metadata !DIExpression()) #8, !dbg !916
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i.i, metadata !918, metadata !DIExpression()) #8, !dbg !919
  %97 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i21, align 8, !dbg !920
  %call.i.i = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %97) #8, !dbg !921
  store %struct.__cilkrts_worker* %call.i.i, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !919
  %98 = load i32, i32* @alert_level, align 4, !dbg !922
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %parent.i.i, metadata !923, metadata !DIExpression()) #8, !dbg !924
  %99 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i21, align 8, !dbg !925
  %call_parent.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %99, i32 0, i32 2, !dbg !926
  %100 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %call_parent.i.i, align 8, !dbg !926
  store %struct.__cilkrts_stack_frame* %100, %struct.__cilkrts_stack_frame** %parent.i.i, align 8, !dbg !924
  %101 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i.i, align 8, !dbg !927
  %102 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !928
  %current_stack_frame.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %102, i32 0, i32 4, !dbg !929
  store %struct.__cilkrts_stack_frame* %101, %struct.__cilkrts_stack_frame** %current_stack_frame.i.i, align 32, !dbg !930
  %103 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !931
  %tobool1.i.i = trunc i8 %103 to i1, !dbg !931
  br i1 %tobool1.i.i, label %if.then.i.i, label %if.end.i.i, !dbg !933

if.then.i.i:                                      ; preds = %pfor.inc32.otd1
  %104 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !934
  %105 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !936
  %extension.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %105, i32 0, i32 8, !dbg !937
  call void @__cilkrts_extend_return_from_spawn(%struct.__cilkrts_worker* noundef %104, i8** noundef %extension.i.i) #8, !dbg !938
  %106 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i.i, align 8, !dbg !939
  %extension2.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %106, i32 0, i32 5, !dbg !940
  %107 = load i8*, i8** %extension2.i.i, align 8, !dbg !940
  %108 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !941
  %extension3.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %108, i32 0, i32 8, !dbg !942
  store i8* %107, i8** %extension3.i.i, align 64, !dbg !943
  br label %if.end.i.i, !dbg !944

if.end.i.i:                                       ; preds = %if.then.i.i, %pfor.inc32.otd1
  %109 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i21, align 8, !dbg !945
  %call_parent4.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %109, i32 0, i32 2, !dbg !946
  store %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %call_parent4.i.i, align 8, !dbg !947
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame*** %tail.i.i, metadata !948, metadata !DIExpression()) #8, !dbg !950
  %110 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !951
  %tail5.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %110, i32 0, i32 1, !dbg !952
  %111 = bitcast %struct.__cilkrts_stack_frame*** %tail5.i.i to i64*, !dbg !953
  %112 = bitcast %struct.__cilkrts_stack_frame*** %atomic-temp.i.i to i64*, !dbg !953
  %113 = load atomic i64, i64* %111 monotonic, align 8, !dbg !953
  store i64 %113, i64* %112, align 8, !dbg !953
  %114 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %atomic-temp.i.i, align 8, !dbg !953
  store %struct.__cilkrts_stack_frame** %114, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !950
  %115 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !954
  %incdec.ptr.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %115, i32 -1, !dbg !954
  store %struct.__cilkrts_stack_frame** %incdec.ptr.i.i, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !954
  %116 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !955
  %tail6.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %116, i32 0, i32 1, !dbg !956
  %117 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !957
  store %struct.__cilkrts_stack_frame** %117, %struct.__cilkrts_stack_frame*** %.atomictmp.i.i, align 8, !dbg !958
  %118 = bitcast %struct.__cilkrts_stack_frame*** %tail6.i.i to i64*, !dbg !958
  %119 = bitcast %struct.__cilkrts_stack_frame*** %.atomictmp.i.i to i64*, !dbg !958
  %120 = load i64, i64* %119, align 8, !dbg !958
  store atomic i64 %120, i64* %118 seq_cst, align 8, !dbg !958
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame*** %exc.i.i, metadata !959, metadata !DIExpression()) #8, !dbg !960
  %121 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i, align 8, !dbg !961
  %exc7.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %121, i32 0, i32 2, !dbg !962
  %122 = bitcast %struct.__cilkrts_stack_frame*** %exc7.i.i to i64*, !dbg !963
  %123 = bitcast %struct.__cilkrts_stack_frame*** %atomic-temp8.i.i to i64*, !dbg !963
  %124 = load atomic i64, i64* %122 seq_cst, align 16, !dbg !963
  store i64 %124, i64* %123, align 8, !dbg !963
  %125 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %atomic-temp8.i.i, align 8, !dbg !963
  store %struct.__cilkrts_stack_frame** %125, %struct.__cilkrts_stack_frame*** %exc.i.i, align 8, !dbg !960
  %126 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i21, align 8, !dbg !964
  %flags.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %126, i32 0, i32 0, !dbg !965
  %127 = load i32, i32* %flags.i.i, align 8, !dbg !966
  %and9.i.i = and i32 %127, -5, !dbg !966
  store i32 %and9.i.i, i32* %flags.i.i, align 8, !dbg !966
  %128 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %exc.i.i, align 8, !dbg !967
  %129 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i, align 8, !dbg !969
  %cmp.i.i = icmp ugt %struct.__cilkrts_stack_frame** %128, %129, !dbg !970
  %conv.i.i = zext i1 %cmp.i.i to i32, !dbg !970
  %conv10.i.i = sext i32 %conv.i.i to i64, !dbg !967
  br i1 %cmp.i.i, label %if.then12.i.i, label %__cilk_helper_epilogue.exit, !dbg !971

if.then12.i.i:                                    ; preds = %if.end.i.i
  call void @Cilk_exception_handler(i8* noundef null) #8, !dbg !972
  br label %__cilk_helper_epilogue.exit, !dbg !974

__cilk_helper_epilogue.exit:                      ; preds = %if.end.i.i, %if.then12.i.i
  ret void

cilkrts_cleanup:                                  ; preds = %pfor.detach15.otd1.split, %sync.continue.otd1
  %cleanup.lpad = landingpad { i8*, i32 }
          cleanup
  %130 = extractvalue { i8*, i32 } %cleanup.lpad, 0
  store %struct.__cilkrts_stack_frame* %__cilkrts_sf, %struct.__cilkrts_stack_frame** %sf.addr.i30, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i30, metadata !975, metadata !DIExpression()) #8, !dbg !979
  store i8* %130, i8** %exn.addr.i, align 8
  call void @llvm.dbg.declare(metadata i8** %exn.addr.i, metadata !980, metadata !DIExpression()) #8, !dbg !981
  %131 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i30, align 8, !dbg !982
  %132 = load i8*, i8** %exn.addr.i, align 8, !dbg !983
  store %struct.__cilkrts_stack_frame* %131, %struct.__cilkrts_stack_frame** %sf.addr.i.i23, align 8
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %sf.addr.i.i23, metadata !984, metadata !DIExpression()) #8, !dbg !986
  store i8* %132, i8** %exn.addr.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %exn.addr.i.i, metadata !988, metadata !DIExpression()) #8, !dbg !989
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_worker** %w.i.i24, metadata !990, metadata !DIExpression()) #8, !dbg !991
  %133 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i23, align 8, !dbg !992
  %call.i.i31 = call %struct.__cilkrts_worker* @get_worker_from_stack(%struct.__cilkrts_stack_frame* noundef %133) #8, !dbg !993
  store %struct.__cilkrts_worker* %call.i.i31, %struct.__cilkrts_worker** %w.i.i24, align 8, !dbg !991
  %134 = load i32, i32* @alert_level, align 4, !dbg !994
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame** %parent.i.i25, metadata !995, metadata !DIExpression()) #8, !dbg !996
  %135 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i23, align 8, !dbg !997
  %call_parent.i.i32 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %135, i32 0, i32 2, !dbg !998
  %136 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %call_parent.i.i32, align 8, !dbg !998
  store %struct.__cilkrts_stack_frame* %136, %struct.__cilkrts_stack_frame** %parent.i.i25, align 8, !dbg !996
  %137 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i.i25, align 8, !dbg !999
  %138 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i24, align 8, !dbg !1000
  %current_stack_frame.i.i33 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %138, i32 0, i32 4, !dbg !1001
  store %struct.__cilkrts_stack_frame* %137, %struct.__cilkrts_stack_frame** %current_stack_frame.i.i33, align 32, !dbg !1002
  %139 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i23, align 8, !dbg !1003
  %call_parent1.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %139, i32 0, i32 2, !dbg !1004
  store %struct.__cilkrts_stack_frame* null, %struct.__cilkrts_stack_frame** %call_parent1.i.i, align 8, !dbg !1005
  %140 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i23, align 8, !dbg !1006
  %flags.i.i34 = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %140, i32 0, i32 0, !dbg !1008
  %141 = load i32, i32* %flags.i.i34, align 8, !dbg !1008
  %and2.i.i = and i32 %141, 4, !dbg !1009
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !1009
  br i1 %tobool3.i.i, label %if.then.i.i35, label %__cilk_helper_epilogue_exn.exit, !dbg !1010

if.then.i.i35:                                    ; preds = %cilkrts_cleanup
  %142 = load i8, i8* @__cilkrts_use_extension, align 1, !dbg !1011
  %tobool4.i.i = trunc i8 %142 to i1, !dbg !1011
  br i1 %tobool4.i.i, label %if.then5.i.i, label %if.end.i.i40, !dbg !1014

if.then5.i.i:                                     ; preds = %if.then.i.i35
  %143 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i24, align 8, !dbg !1015
  %144 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i24, align 8, !dbg !1017
  %extension.i.i36 = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %144, i32 0, i32 8, !dbg !1018
  call void @__cilkrts_extend_return_from_spawn(%struct.__cilkrts_worker* noundef %143, i8** noundef %extension.i.i36) #8, !dbg !1019
  %145 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %parent.i.i25, align 8, !dbg !1020
  %extension6.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %145, i32 0, i32 5, !dbg !1021
  %146 = load i8*, i8** %extension6.i.i, align 8, !dbg !1021
  %147 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i24, align 8, !dbg !1022
  %extension7.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %147, i32 0, i32 8, !dbg !1023
  store i8* %146, i8** %extension7.i.i, align 64, !dbg !1024
  br label %if.end.i.i40, !dbg !1025

if.end.i.i40:                                     ; preds = %if.then5.i.i, %if.then.i.i35
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame*** %tail.i.i26, metadata !1026, metadata !DIExpression()) #8, !dbg !1027
  %148 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i24, align 8, !dbg !1028
  %tail8.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %148, i32 0, i32 1, !dbg !1029
  %149 = bitcast %struct.__cilkrts_stack_frame*** %tail8.i.i to i64*, !dbg !1030
  %150 = bitcast %struct.__cilkrts_stack_frame*** %atomic-temp.i.i27 to i64*, !dbg !1030
  %151 = load atomic i64, i64* %149 monotonic, align 8, !dbg !1030
  store i64 %151, i64* %150, align 8, !dbg !1030
  %152 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %atomic-temp.i.i27, align 8, !dbg !1030
  store %struct.__cilkrts_stack_frame** %152, %struct.__cilkrts_stack_frame*** %tail.i.i26, align 8, !dbg !1027
  %153 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i26, align 8, !dbg !1031
  %incdec.ptr.i.i37 = getelementptr inbounds %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %153, i32 -1, !dbg !1031
  store %struct.__cilkrts_stack_frame** %incdec.ptr.i.i37, %struct.__cilkrts_stack_frame*** %tail.i.i26, align 8, !dbg !1031
  %154 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i24, align 8, !dbg !1032
  %tail9.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %154, i32 0, i32 1, !dbg !1033
  %155 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i26, align 8, !dbg !1034
  store %struct.__cilkrts_stack_frame** %155, %struct.__cilkrts_stack_frame*** %.atomictmp.i.i28, align 8, !dbg !1035
  %156 = bitcast %struct.__cilkrts_stack_frame*** %tail9.i.i to i64*, !dbg !1035
  %157 = bitcast %struct.__cilkrts_stack_frame*** %.atomictmp.i.i28 to i64*, !dbg !1035
  %158 = load i64, i64* %157, align 8, !dbg !1035
  store atomic i64 %158, i64* %156 seq_cst, align 8, !dbg !1035
  call void @llvm.dbg.declare(metadata %struct.__cilkrts_stack_frame*** %exc.i.i29, metadata !1036, metadata !DIExpression()) #8, !dbg !1037
  %159 = load %struct.__cilkrts_worker*, %struct.__cilkrts_worker** %w.i.i24, align 8, !dbg !1038
  %exc10.i.i = getelementptr inbounds %struct.__cilkrts_worker, %struct.__cilkrts_worker* %159, i32 0, i32 2, !dbg !1039
  %160 = bitcast %struct.__cilkrts_stack_frame*** %exc10.i.i to i64*, !dbg !1040
  %161 = bitcast %struct.__cilkrts_stack_frame*** %atomic-temp11.i.i to i64*, !dbg !1040
  %162 = load atomic i64, i64* %160 seq_cst, align 16, !dbg !1040
  store i64 %162, i64* %161, align 8, !dbg !1040
  %163 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %atomic-temp11.i.i, align 8, !dbg !1040
  store %struct.__cilkrts_stack_frame** %163, %struct.__cilkrts_stack_frame*** %exc.i.i29, align 8, !dbg !1037
  %164 = load %struct.__cilkrts_stack_frame*, %struct.__cilkrts_stack_frame** %sf.addr.i.i23, align 8, !dbg !1041
  %flags12.i.i = getelementptr inbounds %struct.__cilkrts_stack_frame, %struct.__cilkrts_stack_frame* %164, i32 0, i32 0, !dbg !1042
  %165 = load i32, i32* %flags12.i.i, align 8, !dbg !1043
  %and13.i.i = and i32 %165, -5, !dbg !1043
  store i32 %and13.i.i, i32* %flags12.i.i, align 8, !dbg !1043
  %166 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %exc.i.i29, align 8, !dbg !1044
  %167 = load %struct.__cilkrts_stack_frame**, %struct.__cilkrts_stack_frame*** %tail.i.i26, align 8, !dbg !1046
  %cmp.i.i38 = icmp ugt %struct.__cilkrts_stack_frame** %166, %167, !dbg !1047
  %conv.i.i39 = zext i1 %cmp.i.i38 to i32, !dbg !1047
  %conv14.i.i = sext i32 %conv.i.i39 to i64, !dbg !1044
  br i1 %cmp.i.i38, label %if.then16.i.i, label %if.end17.i.i, !dbg !1048

if.then16.i.i:                                    ; preds = %if.end.i.i40
  %168 = load i8*, i8** %exn.addr.i.i, align 8, !dbg !1049
  call void @Cilk_exception_handler(i8* noundef %168) #8, !dbg !1051
  br label %if.end17.i.i, !dbg !1052

if.end17.i.i:                                     ; preds = %if.then16.i.i, %if.end.i.i40
  br label %__cilk_helper_epilogue_exn.exit, !dbg !1053

__cilk_helper_epilogue_exn.exit:                  ; preds = %cilkrts_cleanup, %if.end17.i.i
  resume { i8*, i32 } %cleanup.lpad
}

declare i32 @__cilk_personality_v0(...)

attributes #0 = { noinline stealable uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { argmemonly willreturn }
attributes #3 = { mustprogress noinline norecurse uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { nofree nosync nounwind readnone willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nounwind }
attributes #9 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noreturn nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { alwaysinline nounwind }
attributes #12 = { noinline uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { argmemonly nofree nosync nounwind willreturn }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!62, !63, !64, !65, !66}
!llvm.ident = !{!67, !68}
!llvm.dbg.cu = !{!2}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__cilkrts_stack_frame_align", scope: !2, file: !59, line: 27, type: !60, isLocal: false, isDefinition: true, align: 64)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 14.0.6 (/afs/ece/project/seth_group/pakha/my-opencilk-repo/clang 66ec935125d4aaf233119ec6307dd919f87c6606)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !24, globals: !50, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah/runtime/cilk2c_inlined.c", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah/build/runtime", checksumkind: CSK_MD5, checksum: "465ec9728848294a2db321353b33b797")
!4 = !{!5, !15}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ClosureStatus", file: !6, line: 12, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "runtime/closure-type.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "ad13b672d768bf2ee2b89852e1537aaa")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14}
!9 = !DIEnumerator(name: "CLOSURE_RUNNING", value: 42)
!10 = !DIEnumerator(name: "CLOSURE_SUSPENDED", value: 43)
!11 = !DIEnumerator(name: "CLOSURE_RETURNING", value: 44)
!12 = !DIEnumerator(name: "CLOSURE_READY", value: 45)
!13 = !DIEnumerator(name: "CLOSURE_PRE_INVALID", value: 46)
!14 = !DIEnumerator(name: "CLOSURE_POST_INVALID", value: 47)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_order", file: !16, line: 56, baseType: !7, size: 32, elements: !17)
!16 = !DIFile(filename: "my-opencilk-repo/build/lib/clang/14.0.6/include/stdatomic.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha", checksumkind: CSK_MD5, checksum: "de5d66a1ef2f5448cc1919ff39db92bc")
!17 = !{!18, !19, !20, !21, !22, !23}
!18 = !DIEnumerator(name: "memory_order_relaxed", value: 0)
!19 = !DIEnumerator(name: "memory_order_consume", value: 1)
!20 = !DIEnumerator(name: "memory_order_acquire", value: 2)
!21 = !DIEnumerator(name: "memory_order_release", value: 3)
!22 = !DIEnumerator(name: "memory_order_acq_rel", value: 4)
!23 = !DIEnumerator(name: "memory_order_seq_cst", value: 5)
!24 = !{!25, !46, !47}
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pedigree_frame", file: !27, line: 18, baseType: !28)
!27 = !DIFile(filename: "runtime/pedigree-internal.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "b2ab48c2f7e79275c089bcca27405d96")
!28 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pedigree_frame", file: !27, line: 13, size: 320, elements: !29)
!29 = !{!30, !41, !44, !45}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "pedigree", scope: !28, file: !27, line: 14, baseType: !31, size: 128)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cilkrts_pedigree", file: !32, line: 24, baseType: !33)
!32 = !DIFile(filename: "runtime/../include/cilk/cilk_api.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "d63e31ca84b62efaf274f795284c432d")
!33 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__cilkrts_pedigree", file: !32, line: 21, size: 128, elements: !34)
!34 = !{!35, !39}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "rank", scope: !33, file: !32, line: 22, baseType: !36, size: 64)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !37, line: 55, baseType: !38)
!37 = !DIFile(filename: "/usr/include/stdint.h", directory: "", checksumkind: CSK_MD5, checksum: "eed4343443893ce688927c5a48744974")
!38 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !33, file: !32, line: 23, baseType: !40, size: 64, offset: 64)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "rank", scope: !28, file: !27, line: 15, baseType: !42, size: 64, offset: 128)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !37, line: 40, baseType: !43)
!43 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "dprng_dotproduct", scope: !28, file: !27, line: 16, baseType: !36, size: 64, offset: 192)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "dprng_depth", scope: !28, file: !27, line: 17, baseType: !42, size: 64, offset: 256)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !37, line: 48, baseType: !49)
!49 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!50 = !{!0, !51, !56}
!51 = !DIGlobalVariableExpression(var: !52, expr: !DIExpression(DW_OP_constu, 25942344, DW_OP_stack_value))
!52 = distinct !DIGlobalVariable(name: "frame_magic", scope: !2, file: !53, line: 82, type: !54, isLocal: true, isDefinition: true)
!53 = !DIFile(filename: "runtime/frame.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "52b672b45f7b049781032aac95098f71")
!54 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !55)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !37, line: 51, baseType: !7)
!56 = !DIGlobalVariableExpression(var: !57, expr: !DIExpression(DW_OP_constu, 18446744073709551557, DW_OP_stack_value))
!57 = distinct !DIGlobalVariable(name: "DPRNG_PRIME", scope: !2, file: !27, line: 9, type: !58, isLocal: true, isDefinition: true)
!58 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !36)
!59 = !DIFile(filename: "runtime/cilk2c_inlined.c", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "465ec9728848294a2db321353b33b797")
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !61, line: 46, baseType: !38)
!61 = !DIFile(filename: "my-opencilk-repo/build/lib/clang/14.0.6/include/stddef.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!62 = !{i32 1, !"wchar_size", i32 4}
!63 = !{i32 7, !"uwtable", i32 1}
!64 = !{i32 7, !"frame-pointer", i32 2}
!65 = !{i32 7, !"Dwarf Version", i32 5}
!66 = !{i32 2, !"Debug Info Version", i32 3}
!67 = !{!"clang version 14.0.6 (/afs/ece/project/seth_group/ziqiliu/uli-opencilk-project/clang a3c5ebae5d3682f08ee5fffc20678b8b69c3ae06)"}
!68 = !{!"clang version 14.0.6 (/afs/ece/project/seth_group/pakha/my-opencilk-repo/clang 66ec935125d4aaf233119ec6307dd919f87c6606)"}
!69 = !DILocalVariable(name: "sf", arg: 1, scope: !70, file: !59, line: 65, type: !73)
!70 = distinct !DISubprogram(name: "__cilkrts_enter_frame", scope: !59, file: !59, line: 65, type: !71, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!71 = !DISubroutineType(types: !72)
!72 = !{null, !73}
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cilkrts_stack_frame", file: !75, line: 9, baseType: !76)
!75 = !DIFile(filename: "runtime/types.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "2f05ff4e6e29b4b6ae8e6fdd175d312c")
!76 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__cilkrts_stack_frame", file: !53, line: 17, size: 576, elements: !77)
!77 = !{!78, !79, !80, !82, !425, !426}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !76, file: !53, line: 20, baseType: !55, size: 32)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !76, file: !53, line: 23, baseType: !55, size: 32, offset: 32)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "call_parent", scope: !76, file: !53, line: 28, baseType: !81, size: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "worker", scope: !76, file: !53, line: 38, baseType: !83, size: 64, offset: 128)
!83 = !DIDerivedType(tag: DW_TAG_atomic_type, baseType: !84)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__cilkrts_worker", file: !86, line: 17, size: 8192, align: 8192, elements: !87)
!86 = !DIFile(filename: "runtime/worker.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "4ba71b52b96c1ed16b0583698b5a477e")
!87 = !{!88, !91, !92, !93, !95, !96, !137, !392, !422, !423, !424}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !85, file: !86, line: 21, baseType: !89, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_atomic_type, baseType: !90)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !85, file: !86, line: 22, baseType: !89, size: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "exc", scope: !85, file: !86, line: 23, baseType: !89, size: 64, offset: 128)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !85, file: !86, line: 26, baseType: !94, size: 32, offset: 192)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "worker_id", file: !75, line: 6, baseType: !55)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "current_stack_frame", scope: !85, file: !86, line: 31, baseType: !81, size: 64, offset: 256)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "reducer_map", scope: !85, file: !86, line: 34, baseType: !97, size: 64, offset: 320)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = !DIDerivedType(tag: DW_TAG_typedef, name: "cilkred_map", file: !75, line: 11, baseType: !99)
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cilkred_map", file: !100, line: 27, size: 256, elements: !101)
!100 = !DIFile(filename: "runtime/cilkred_map.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "e52a4574017c564fe7646f334aa498be")
!101 = !{!102, !105, !106, !107, !109, !111}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "spa_cap", scope: !99, file: !100, line: 28, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "hyper_id_t", file: !104, line: 9, baseType: !55)
!104 = !DIFile(filename: "runtime/hyperobject_base.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "14fc778f8b4d01cd421e525c7fab9a5b")
!105 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_vinfo", scope: !99, file: !100, line: 29, baseType: !103, size: 32, offset: 32)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_logs", scope: !99, file: !100, line: 30, baseType: !103, size: 32, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "merging", scope: !99, file: !100, line: 32, baseType: !108, size: 8, offset: 96)
!108 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !99, file: !100, line: 33, baseType: !110, size: 64, offset: 128)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "vinfo", scope: !99, file: !100, line: 35, baseType: !112, size: 64, offset: 192)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ViewInfo", file: !100, line: 21, baseType: !114)
!114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "view_info", file: !100, line: 18, size: 128, elements: !115)
!115 = !{!116, !117}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !114, file: !100, line: 19, baseType: !46, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "hyper", scope: !114, file: !100, line: 20, baseType: !118, size: 64, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "hyperobject_base", file: !104, line: 21, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hyperobject_base", file: !104, line: 13, size: 320, elements: !121)
!121 = !{!122, !127, !132, !133, !134, !136}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "identity_fn", scope: !120, file: !104, line: 14, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cilk_identity_fn", file: !32, line: 31, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{null, !46}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_fn", scope: !120, file: !104, line: 15, baseType: !128, size: 64, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cilk_reduce_fn", file: !32, line: 32, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{null, !46, !46}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "view_size", scope: !120, file: !104, line: 16, baseType: !60, size: 64, offset: 128)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "id_num", scope: !120, file: !104, line: 17, baseType: !103, size: 32, offset: 192)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !120, file: !104, line: 18, baseType: !135, size: 32, offset: 224)
!135 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !120, file: !104, line: 19, baseType: !46, size: 64, offset: 256)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !85, file: !86, line: 37, baseType: !138, size: 64, offset: 384)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "global_state", file: !140, line: 48, size: 10752, elements: !141)
!140 = !DIFile(filename: "runtime/global.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "8b905717cf32668f3048866ca0d22d34")
!141 = !{!142, !151, !152, !161, !163, !228, !231, !233, !252, !265, !285, !286, !292, !293, !295, !297, !298, !300, !304, !331, !353, !354, !355, !356, !357, !358, !360, !361, !362, !364, !365, !366, !367, !368, !371, !374}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !139, file: !140, line: 50, baseType: !143, size: 256)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rts_options", file: !140, line: 37, size: 256, elements: !144)
!144 = !{!145, !146, !147, !148, !149, !150}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "stacksize", scope: !143, file: !140, line: 38, baseType: !60, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nproc", scope: !143, file: !140, line: 39, baseType: !7, size: 32, offset: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "reducer_cap", scope: !143, file: !140, line: 40, baseType: !7, size: 32, offset: 96)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "deqdepth", scope: !143, file: !140, line: 41, baseType: !7, size: 32, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "fiber_pool_cap", scope: !143, file: !140, line: 42, baseType: !7, size: 32, offset: 160)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "force_reduce", scope: !143, file: !140, line: 43, baseType: !7, size: 32, offset: 192)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "nworkers", scope: !139, file: !140, line: 52, baseType: !7, size: 32, offset: 256)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "worker_args", scope: !139, file: !140, line: 53, baseType: !153, size: 64, offset: 320)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "worker_args", file: !140, line: 122, size: 128, elements: !155)
!155 = !{!156, !157}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !154, file: !140, line: 123, baseType: !94, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !154, file: !140, line: 124, baseType: !158, size: 64, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "global_state", file: !160, line: 30, baseType: !139)
!160 = !DIFile(filename: "runtime/cilk-internal.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "420bf31eba28da901fba1fc7a0e7105a")
!161 = !DIDerivedType(tag: DW_TAG_member, name: "workers", scope: !139, file: !140, line: 54, baseType: !162, size: 64, offset: 384)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "deques", scope: !139, file: !140, line: 56, baseType: !164, size: 64, offset: 448)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReadyDeque", file: !166, line: 19, size: 512, align: 512, elements: !167)
!166 = !DIFile(filename: "runtime/readydeque.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "3f8bafaff74476d9258f5fab5b547bf6")
!167 = !{!168, !178, !226, !227}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !165, file: !166, line: 20, baseType: !169, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "cilk_mutex", file: !170, line: 5, baseType: !171)
!170 = !DIFile(filename: "runtime/mutex.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "6f093ec2985aefc87e9edef7d039ba52")
!171 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cilk_mutex", file: !170, line: 20, size: 32, elements: !172)
!172 = !{!173, !175}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !171, file: !170, line: 21, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !135)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "posix", scope: !171, file: !170, line: 22, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_spinlock_t", file: !177, line: 226, baseType: !174)
!177 = !DIFile(filename: "/usr/include/bits/pthreadtypes.h", directory: "", checksumkind: CSK_MD5, checksum: "881aaabf43c3dc120f1b90af0857d602")
!178 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !165, file: !166, line: 21, baseType: !179, size: 64, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "Closure", file: !6, line: 10, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Closure", file: !6, line: 34, size: 2048, align: 512, elements: !182)
!182 = !{!183, !184, !185, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !202, !203, !204, !205, !206, !207, !208, !209, !210, !215, !216, !217, !218, !219, !220, !224, !225}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !181, file: !6, line: 35, baseType: !169, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !181, file: !6, line: 37, baseType: !73, size: 64, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "fiber", scope: !181, file: !6, line: 39, baseType: !186, size: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = !DICompositeType(tag: DW_TAG_structure_type, name: "cilk_fiber", file: !188, line: 30, flags: DIFlagFwdDecl)
!188 = !DIFile(filename: "runtime/fiber.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "657b88f2a7208787b4d71085ee163dec")
!189 = !DIDerivedType(tag: DW_TAG_member, name: "fiber_child", scope: !181, file: !6, line: 40, baseType: !186, size: 64, offset: 192)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "ext_fiber", scope: !181, file: !6, line: 42, baseType: !186, size: 64, offset: 256)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "ext_fiber_child", scope: !181, file: !6, line: 43, baseType: !186, size: 64, offset: 320)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "owner_ready_deque", scope: !181, file: !6, line: 45, baseType: !94, size: 32, offset: 384)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "mutex_owner", scope: !181, file: !6, line: 46, baseType: !94, size: 32, offset: 416)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !181, file: !6, line: 48, baseType: !5, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "has_cilk_callee", scope: !181, file: !6, line: 49, baseType: !108, size: 8, offset: 456)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "lock_wait", scope: !181, file: !6, line: 50, baseType: !108, size: 8, offset: 464)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "simulated_stolen", scope: !181, file: !6, line: 51, baseType: !108, size: 8, offset: 472)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "join_counter", scope: !181, file: !6, line: 52, baseType: !7, size: 32, offset: 480)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "orig_rsp", scope: !181, file: !6, line: 53, baseType: !200, size: 64, offset: 512)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !181, file: !6, line: 55, baseType: !179, size: 64, offset: 576)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "call_parent", scope: !181, file: !6, line: 57, baseType: !179, size: 64, offset: 640)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "spawn_parent", scope: !181, file: !6, line: 58, baseType: !179, size: 64, offset: 704)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "left_sib", scope: !181, file: !6, line: 60, baseType: !179, size: 64, offset: 768)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "right_sib", scope: !181, file: !6, line: 61, baseType: !179, size: 64, offset: 832)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "right_most_child", scope: !181, file: !6, line: 63, baseType: !179, size: 64, offset: 896)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "next_ready", scope: !181, file: !6, line: 82, baseType: !179, size: 64, offset: 960)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ready", scope: !181, file: !6, line: 83, baseType: !179, size: 64, offset: 1024)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "right_rmap", scope: !181, file: !6, line: 89, baseType: !211, size: 64, offset: 1088)
!211 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_atomic_type, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "cilkred_map", file: !100, line: 37, baseType: !99)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "child_rmap", scope: !181, file: !6, line: 91, baseType: !211, size: 64, offset: 1152)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "user_rmap", scope: !181, file: !6, line: 93, baseType: !213, size: 64, offset: 1216)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "reraise_cfa", scope: !181, file: !6, line: 101, baseType: !200, size: 64, offset: 1280)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "parent_rsp", scope: !181, file: !6, line: 104, baseType: !200, size: 64, offset: 1344)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "saved_throwing_fiber", scope: !181, file: !6, line: 107, baseType: !186, size: 64, offset: 1408)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "right_exn", scope: !181, file: !6, line: 110, baseType: !221, size: 64, offset: 1472)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "closure_exception", file: !6, line: 25, size: 64, elements: !222)
!222 = !{!223}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "exn", scope: !221, file: !6, line: 26, baseType: !200, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "child_exn", scope: !181, file: !6, line: 112, baseType: !221, size: 64, offset: 1536)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "user_exn", scope: !181, file: !6, line: 114, baseType: !221, size: 64, offset: 1600)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !165, file: !166, line: 21, baseType: !179, size: 64, offset: 128)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "mutex_owner", scope: !165, file: !166, line: 22, baseType: !94, size: 32, offset: 192)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !139, file: !140, line: 57, baseType: !229, size: 64, offset: 512)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !177, line: 60, baseType: !38)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "root_closure", scope: !139, file: !140, line: 58, baseType: !232, size: 64, offset: 576)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "fiber_pool", scope: !139, file: !140, line: 60, baseType: !234, size: 512, align: 512, offset: 1024)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cilk_fiber_pool", file: !188, line: 22, size: 512, elements: !235)
!235 = !{!236, !237, !238, !239, !240, !242, !244, !245, !246}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !234, file: !188, line: 23, baseType: !169, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "mutex_owner", scope: !234, file: !188, line: 24, baseType: !94, size: 32, offset: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !234, file: !188, line: 25, baseType: !135, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "stack_size", scope: !234, file: !188, line: 26, baseType: !60, size: 64, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !234, file: !188, line: 27, baseType: !241, size: 64, offset: 192)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "fibers", scope: !234, file: !188, line: 30, baseType: !243, size: 64, offset: 256)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !234, file: !188, line: 31, baseType: !7, size: 32, offset: 320)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !234, file: !188, line: 32, baseType: !7, size: 32, offset: 352)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !234, file: !188, line: 33, baseType: !247, size: 96, offset: 384)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiber_pool_stats", file: !188, line: 16, size: 96, elements: !248)
!248 = !{!249, !250, !251}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !247, file: !188, line: 17, baseType: !135, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "max_in_use", scope: !247, file: !188, line: 18, baseType: !135, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "max_free", scope: !247, file: !188, line: 19, baseType: !7, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "im_pool", scope: !139, file: !140, line: 61, baseType: !253, size: 448, align: 512, offset: 1536)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "global_im_pool", file: !254, line: 15, size: 448, elements: !255)
!254 = !DIFile(filename: "runtime/internal-malloc-impl.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "e2a95149ed128d780185dac25d65a812")
!255 = !{!256, !257, !258, !260, !261, !262, !263, !264}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "mem_begin", scope: !253, file: !254, line: 16, baseType: !200, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !253, file: !254, line: 17, baseType: !200, size: 64, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "mem_list", scope: !253, file: !254, line: 18, baseType: !259, size: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "mem_list_index", scope: !253, file: !254, line: 19, baseType: !7, size: 32, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "mem_list_size", scope: !253, file: !254, line: 20, baseType: !7, size: 32, offset: 224)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "num_global_malloc", scope: !253, file: !254, line: 21, baseType: !60, size: 64, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !253, file: !254, line: 22, baseType: !60, size: 64, offset: 320)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wasted", scope: !253, file: !254, line: 23, baseType: !60, size: 64, offset: 384)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "im_desc", scope: !139, file: !140, line: 62, baseType: !266, size: 2112, align: 512, offset: 2048)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cilk_im_desc", file: !254, line: 39, size: 2112, elements: !267)
!267 = !{!268, !280, !281}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !266, file: !254, line: 40, baseType: !269, size: 1792)
!269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !270, size: 1792, elements: !278)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "im_bucket", file: !254, line: 26, size: 256, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !277}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !270, file: !254, line: 27, baseType: !46, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "free_list_size", scope: !270, file: !254, line: 28, baseType: !7, size: 32, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "free_list_limit", scope: !270, file: !254, line: 29, baseType: !7, size: 32, offset: 96)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !270, file: !254, line: 33, baseType: !135, size: 32, offset: 128)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated", scope: !270, file: !254, line: 34, baseType: !135, size: 32, offset: 160)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "wasted", scope: !270, file: !254, line: 35, baseType: !43, size: 64, offset: 192)
!278 = !{!279}
!279 = !DISubrange(count: 7)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !266, file: !254, line: 41, baseType: !43, size: 64, offset: 1792)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "num_malloc", scope: !266, file: !254, line: 42, baseType: !282, size: 256, offset: 1856)
!282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 256, elements: !283)
!283 = !{!284}
!284 = !DISubrange(count: 4)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "im_lock", scope: !139, file: !140, line: 63, baseType: !169, size: 32, offset: 4160)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "boss_ctx", scope: !139, file: !140, line: 67, baseType: !287, size: 320, align: 512, offset: 4608)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "jmpbuf", file: !288, line: 9, baseType: !289)
!288 = !DIFile(filename: "runtime/jmpbuf.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "81b7824f925c5233ec9008023b37113e")
!289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 320, elements: !290)
!290 = !{!291}
!291 = !DISubrange(count: 5)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "orig_rsp", scope: !139, file: !140, line: 68, baseType: !46, size: 64, offset: 4928)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "workers_started", scope: !139, file: !140, line: 69, baseType: !294, size: 8, offset: 4992)
!294 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "start_root_worker", scope: !139, file: !140, line: 73, baseType: !296, size: 32, align: 512, offset: 5120)
!296 = !DIDerivedType(tag: DW_TAG_atomic_type, baseType: !55)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "cilkified_futex", scope: !139, file: !140, line: 78, baseType: !296, size: 32, offset: 5152)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "exiting_worker", scope: !139, file: !140, line: 79, baseType: !299, size: 32, offset: 5184)
!299 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !94)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "cilkified", scope: !139, file: !140, line: 80, baseType: !301, size: 8, offset: 5216)
!301 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !302)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_bool", file: !16, line: 85, baseType: !303)
!303 = !DIDerivedType(tag: DW_TAG_atomic_type, baseType: !108)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "start_root_worker_lock", scope: !139, file: !140, line: 82, baseType: !305, size: 320, offset: 5248)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !177, line: 128, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !177, line: 90, size: 320, elements: !307)
!307 = !{!308, !326, !330}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !306, file: !177, line: 125, baseType: !309, size: 320)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !177, line: 92, size: 320, elements: !310)
!310 = !{!311, !312, !313, !314, !315, !316, !318, !319}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !309, file: !177, line: 94, baseType: !135, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !309, file: !177, line: 95, baseType: !7, size: 32, offset: 32)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !309, file: !177, line: 96, baseType: !135, size: 32, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !309, file: !177, line: 98, baseType: !7, size: 32, offset: 96)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !309, file: !177, line: 102, baseType: !135, size: 32, offset: 128)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !309, file: !177, line: 104, baseType: !317, size: 16, offset: 160)
!317 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !309, file: !177, line: 105, baseType: !317, size: 16, offset: 176)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !309, file: !177, line: 106, baseType: !320, size: 128, offset: 192)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !177, line: 79, baseType: !321)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !177, line: 75, size: 128, elements: !322)
!322 = !{!323, !325}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !321, file: !177, line: 77, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !321, file: !177, line: 78, baseType: !324, size: 64, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !306, file: !177, line: 126, baseType: !327, size: 320)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 320, elements: !328)
!328 = !{!329}
!329 = !DISubrange(count: 40)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !306, file: !177, line: 127, baseType: !43, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "start_root_worker_cond_var", scope: !139, file: !140, line: 83, baseType: !332, size: 384, offset: 5568)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_cond_t", file: !177, line: 154, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !177, line: 139, size: 384, elements: !334)
!334 = !{!335, !347, !351}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !333, file: !177, line: 151, baseType: !336, size: 384)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !333, file: !177, line: 141, size: 384, elements: !337)
!337 = !{!338, !339, !340, !342, !343, !344, !345, !346}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !336, file: !177, line: 143, baseType: !135, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "__futex", scope: !336, file: !177, line: 144, baseType: !7, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "__total_seq", scope: !336, file: !177, line: 145, baseType: !341, size: 64, offset: 64)
!341 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "__wakeup_seq", scope: !336, file: !177, line: 146, baseType: !341, size: 64, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "__woken_seq", scope: !336, file: !177, line: 147, baseType: !341, size: 64, offset: 192)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "__mutex", scope: !336, file: !177, line: 148, baseType: !46, size: 64, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "__nwaiters", scope: !336, file: !177, line: 149, baseType: !7, size: 32, offset: 320)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__broadcast_seq", scope: !336, file: !177, line: 150, baseType: !7, size: 32, offset: 352)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !333, file: !177, line: 152, baseType: !348, size: 384)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 384, elements: !349)
!349 = !{!350}
!350 = !DISubrange(count: 48)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !333, file: !177, line: 153, baseType: !352, size: 64)
!352 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "cilkified_lock", scope: !139, file: !140, line: 84, baseType: !305, size: 320, offset: 5952)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "cilkified_cond_var", scope: !139, file: !140, line: 85, baseType: !332, size: 384, offset: 6272)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !139, file: !140, line: 89, baseType: !301, size: 8, align: 512, offset: 6656)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "terminate", scope: !139, file: !140, line: 90, baseType: !294, size: 8, offset: 6664)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "root_closure_initialized", scope: !139, file: !140, line: 91, baseType: !294, size: 8, offset: 6672)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "index_to_worker", scope: !139, file: !140, line: 93, baseType: !359, size: 64, align: 512, offset: 7168)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "worker_to_index", scope: !139, file: !140, line: 94, baseType: !359, size: 64, offset: 7232)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "index_lock", scope: !139, file: !140, line: 95, baseType: !169, size: 32, offset: 7296)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "disengaged_sentinel", scope: !139, file: !140, line: 101, baseType: !363, size: 64, align: 512, offset: 7680)
!363 = !DIDerivedType(tag: DW_TAG_atomic_type, baseType: !36)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "disengaged_thieves_futex", scope: !139, file: !140, line: 106, baseType: !296, size: 32, align: 512, offset: 8192)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "disengaged_lock", scope: !139, file: !140, line: 108, baseType: !305, size: 320, offset: 8256)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "disengaged_cond_var", scope: !139, file: !140, line: 109, baseType: !332, size: 384, offset: 8576)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "print_lock", scope: !139, file: !140, line: 111, baseType: !169, size: 32, offset: 8960)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "id_manager", scope: !139, file: !140, line: 113, baseType: !369, size: 64, offset: 9024)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "reducer_id_manager", file: !140, line: 22, flags: DIFlagFwdDecl)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_table", scope: !139, file: !140, line: 115, baseType: !372, size: 64, offset: 9088)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "hyper_table", file: !140, line: 115, flags: DIFlagFwdDecl)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !139, file: !140, line: 117, baseType: !375, size: 1472, offset: 9152)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "global_sched_stats", file: !376, line: 34, size: 1472, elements: !377)
!376 = !DIFile(filename: "runtime/sched_stats.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "6d543503527fddaf1cfacc07dcc8ba43")
!377 = !{!378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !390}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "boss_waiting", scope: !375, file: !376, line: 36, baseType: !36, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "boss_wait_count", scope: !375, file: !376, line: 37, baseType: !36, size: 64, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "boss_begin", scope: !375, file: !376, line: 38, baseType: !36, size: 64, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "exit_time", scope: !375, file: !376, line: 39, baseType: !36, size: 64, offset: 192)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "boss_end", scope: !375, file: !376, line: 40, baseType: !36, size: 64, offset: 256)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "steals", scope: !375, file: !376, line: 41, baseType: !36, size: 64, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "repos", scope: !375, file: !376, line: 42, baseType: !36, size: 64, offset: 384)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "reeng_rqsts", scope: !375, file: !376, line: 43, baseType: !36, size: 64, offset: 448)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "onesen_rqsts", scope: !375, file: !376, line: 44, baseType: !36, size: 64, offset: 512)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !375, file: !376, line: 45, baseType: !388, size: 448, offset: 576)
!388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 448, elements: !278)
!389 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !375, file: !376, line: 46, baseType: !391, size: 448, offset: 1024)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 448, elements: !278)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !85, file: !86, line: 40, baseType: !393, size: 64, offset: 448)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_state", file: !395, line: 10, size: 5376, elements: !396)
!395 = !DIFile(filename: "runtime/local.h", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "d4b5de2fa46afee76a320583a6972d8d")
!396 = !{!397, !398, !401, !403, !404, !405, !406, !407, !408, !409, !410, !411}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_stack", scope: !394, file: !395, line: 11, baseType: !90, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_table", scope: !394, file: !395, line: 12, baseType: !399, size: 64, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DICompositeType(tag: DW_TAG_structure_type, name: "hyper_table_cache", file: !395, line: 8, flags: DIFlagFwdDecl)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !394, file: !395, line: 14, baseType: !402, size: 16, offset: 128)
!402 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "provably_good_steal", scope: !394, file: !395, line: 15, baseType: !108, size: 8, offset: 144)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "rand_next", scope: !394, file: !395, line: 16, baseType: !7, size: 32, offset: 160)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "wake_val", scope: !394, file: !395, line: 17, baseType: !55, size: 32, offset: 192)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "rts_ctx", scope: !394, file: !395, line: 19, baseType: !287, size: 320, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "fiber_pool", scope: !394, file: !395, line: 20, baseType: !234, size: 512, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "im_desc", scope: !394, file: !395, line: 21, baseType: !266, size: 2112, offset: 1088)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "fiber_to_free", scope: !394, file: !395, line: 22, baseType: !186, size: 64, offset: 3200)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ext_fiber_to_free", scope: !394, file: !395, line: 23, baseType: !186, size: 64, offset: 3264)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !394, file: !395, line: 24, baseType: !412, size: 2048, offset: 3328)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_stats", file: !376, line: 22, size: 2048, elements: !413)
!413 = !{!414, !415, !416, !417, !418, !419, !420, !421}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !412, file: !376, line: 23, baseType: !391, size: 448)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !412, file: !376, line: 24, baseType: !391, size: 448, offset: 448)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !412, file: !376, line: 25, baseType: !391, size: 448, offset: 896)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !412, file: !376, line: 26, baseType: !391, size: 448, offset: 1344)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "steals", scope: !412, file: !376, line: 28, baseType: !36, size: 64, offset: 1792)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "repos", scope: !412, file: !376, line: 29, baseType: !36, size: 64, offset: 1856)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "reeng_rqsts", scope: !412, file: !376, line: 30, baseType: !36, size: 64, offset: 1920)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "onesen_rqsts", scope: !412, file: !376, line: 31, baseType: !36, size: 64, offset: 1984)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "extension", scope: !85, file: !86, line: 45, baseType: !46, size: 64, offset: 512)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "ext_stack", scope: !85, file: !86, line: 46, baseType: !46, size: 64, offset: 576)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "ltq_limit", scope: !85, file: !86, line: 49, baseType: !90, size: 64, offset: 640)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !76, file: !53, line: 42, baseType: !287, size: 320, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "extension", scope: !76, file: !53, line: 46, baseType: !46, size: 64, offset: 512)
!427 = !{}
!428 = !DILocation(line: 65, column: 46, scope: !70)
!429 = !DILocalVariable(name: "w", scope: !70, file: !59, line: 66, type: !430)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__cilkrts_worker", file: !376, line: 7, baseType: !85)
!432 = !DILocation(line: 66, column: 23, scope: !70)
!433 = !DILocation(line: 54, column: 12, scope: !434, inlinedAt: !437)
!434 = distinct !DISubprogram(name: "__cilkrts_get_tls_worker", scope: !160, file: !160, line: 53, type: !435, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!435 = !DISubroutineType(types: !436)
!436 = !{!430}
!437 = distinct !DILocation(line: 66, column: 27, scope: !70)
!438 = !DILocation(line: 67, column: 5, scope: !70)
!439 = !DILocation(line: 67, column: 9, scope: !70)
!440 = !DILocation(line: 67, column: 15, scope: !70)
!441 = !DILocation(line: 68, column: 17, scope: !442)
!442 = distinct !DILexicalBlock(scope: !70, file: !59, line: 68, column: 9)
!443 = !DILocation(line: 68, column: 14, scope: !442)
!444 = !DILocation(line: 68, column: 9, scope: !70)
!445 = !DILocation(line: 69, column: 17, scope: !446)
!446 = distinct !DILexicalBlock(scope: !442, file: !59, line: 68, column: 20)
!447 = !DILocalVariable(name: "sf", arg: 1, scope: !448, file: !59, line: 33, type: !73)
!448 = distinct !DISubprogram(name: "cilkify", scope: !59, file: !59, line: 33, type: !71, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!449 = !DILocation(line: 33, column: 32, scope: !448, inlinedAt: !450)
!450 = distinct !DILocation(line: 69, column: 9, scope: !446)
!451 = !DILocation(line: 36, column: 26, scope: !452, inlinedAt: !450)
!452 = distinct !DILexicalBlock(scope: !448, file: !59, line: 36, column: 9)
!453 = !DILocation(line: 36, column: 30, scope: !452, inlinedAt: !450)
!454 = !DILocation(line: 36, column: 9, scope: !452, inlinedAt: !450)
!455 = !DILocation(line: 36, column: 35, scope: !452, inlinedAt: !450)
!456 = !DILocation(line: 36, column: 9, scope: !448, inlinedAt: !450)
!457 = !DILocation(line: 37, column: 35, scope: !458, inlinedAt: !450)
!458 = distinct !DILexicalBlock(scope: !452, file: !59, line: 36, column: 41)
!459 = !DILocalVariable(name: "sf", arg: 1, scope: !460, file: !188, line: 43, type: !73)
!460 = distinct !DISubprogram(name: "sysdep_save_fp_ctrl_state", scope: !188, file: !188, line: 43, type: !71, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!461 = !DILocation(line: 43, column: 50, scope: !460, inlinedAt: !462)
!462 = distinct !DILocation(line: 37, column: 9, scope: !458, inlinedAt: !450)
!463 = !DILocation(line: 38, column: 50, scope: !458, inlinedAt: !450)
!464 = !DILocation(line: 38, column: 9, scope: !458, inlinedAt: !450)
!465 = !DILocation(line: 39, column: 5, scope: !458, inlinedAt: !450)
!466 = !DILocation(line: 40, column: 9, scope: !467, inlinedAt: !450)
!467 = distinct !DILexicalBlock(scope: !452, file: !59, line: 39, column: 12)
!468 = !DILocation(line: 54, column: 12, scope: !434, inlinedAt: !469)
!469 = distinct !DILocation(line: 70, column: 13, scope: !446)
!470 = !DILocation(line: 70, column: 11, scope: !446)
!471 = !DILocation(line: 71, column: 5, scope: !446)
!472 = !DILocation(line: 72, column: 5, scope: !70)
!473 = !DILocation(line: 74, column: 5, scope: !70)
!474 = !DILocation(line: 74, column: 9, scope: !70)
!475 = !DILocation(line: 74, column: 15, scope: !70)
!476 = !DILocation(line: 75, column: 23, scope: !70)
!477 = !DILocation(line: 75, column: 26, scope: !70)
!478 = !DILocation(line: 75, column: 5, scope: !70)
!479 = !DILocation(line: 75, column: 9, scope: !70)
!480 = !DILocation(line: 75, column: 21, scope: !70)
!481 = !DILocation(line: 76, column: 28, scope: !70)
!482 = !DILocation(line: 76, column: 32, scope: !70)
!483 = !DILocation(line: 76, column: 40, scope: !70)
!484 = !DILocation(line: 76, column: 5, scope: !70)
!485 = !DILocation(line: 77, column: 30, scope: !70)
!486 = !DILocation(line: 77, column: 5, scope: !70)
!487 = !DILocation(line: 77, column: 8, scope: !70)
!488 = !DILocation(line: 77, column: 28, scope: !70)
!489 = !DILocalVariable(name: "sf", arg: 1, scope: !490, file: !59, line: 98, type: !73)
!490 = distinct !DISubprogram(name: "__cilk_prepare_spawn", scope: !59, file: !59, line: 98, type: !491, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!491 = !DISubroutineType(types: !492)
!492 = !{!135, !73}
!493 = !DILocation(line: 98, column: 45, scope: !490)
!494 = !DILocation(line: 99, column: 31, scope: !490)
!495 = !DILocation(line: 43, column: 50, scope: !460, inlinedAt: !496)
!496 = distinct !DILocation(line: 99, column: 5, scope: !490)
!497 = !DILocalVariable(name: "res", scope: !490, file: !59, line: 100, type: !135)
!498 = !DILocation(line: 100, column: 9, scope: !490)
!499 = !DILocation(line: 100, column: 32, scope: !490)
!500 = !DILocation(line: 100, column: 36, scope: !490)
!501 = !DILocation(line: 100, column: 15, scope: !490)
!502 = !DILocation(line: 101, column: 9, scope: !503)
!503 = distinct !DILexicalBlock(scope: !490, file: !59, line: 101, column: 9)
!504 = !DILocation(line: 101, column: 13, scope: !503)
!505 = !DILocation(line: 101, column: 9, scope: !490)
!506 = !DILocation(line: 102, column: 9, scope: !507)
!507 = distinct !DILexicalBlock(scope: !503, file: !59, line: 101, column: 19)
!508 = !DILocation(line: 103, column: 5, scope: !507)
!509 = !DILocation(line: 104, column: 12, scope: !490)
!510 = !DILocation(line: 104, column: 5, scope: !490)
!511 = distinct !{!511, !512}
!512 = !{!"tapir.loop.spawn.strategy", i32 1}
!513 = !DILocalVariable(name: "sf", arg: 1, scope: !514, file: !59, line: 149, type: !73)
!514 = distinct !DISubprogram(name: "__cilk_sync", scope: !59, file: !59, line: 149, type: !71, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!515 = !DILocation(line: 149, column: 72, scope: !514)
!516 = !DILocation(line: 150, column: 9, scope: !517)
!517 = distinct !DILexicalBlock(scope: !514, file: !59, line: 150, column: 9)
!518 = !DILocation(line: 150, column: 13, scope: !517)
!519 = !DILocation(line: 150, column: 19, scope: !517)
!520 = !DILocation(line: 150, column: 42, scope: !517)
!521 = !DILocation(line: 150, column: 45, scope: !517)
!522 = !DILocation(line: 150, column: 9, scope: !514)
!523 = !DILocation(line: 151, column: 13, scope: !524)
!524 = distinct !DILexicalBlock(scope: !525, file: !59, line: 151, column: 13)
!525 = distinct !DILexicalBlock(scope: !517, file: !59, line: 150, column: 60)
!526 = !DILocation(line: 151, column: 17, scope: !524)
!527 = !DILocation(line: 151, column: 23, scope: !524)
!528 = !DILocation(line: 151, column: 13, scope: !525)
!529 = !DILocation(line: 152, column: 34, scope: !530)
!530 = distinct !DILexicalBlock(scope: !531, file: !59, line: 152, column: 17)
!531 = distinct !DILexicalBlock(scope: !524, file: !59, line: 151, column: 47)
!532 = !DILocation(line: 152, column: 38, scope: !530)
!533 = !DILocation(line: 152, column: 17, scope: !530)
!534 = !DILocation(line: 152, column: 43, scope: !530)
!535 = !DILocation(line: 152, column: 17, scope: !531)
!536 = !DILocation(line: 153, column: 43, scope: !537)
!537 = distinct !DILexicalBlock(scope: !530, file: !59, line: 152, column: 49)
!538 = !DILocation(line: 43, column: 50, scope: !460, inlinedAt: !539)
!539 = distinct !DILocation(line: 153, column: 17, scope: !537)
!540 = !DILocation(line: 154, column: 32, scope: !537)
!541 = !DILocation(line: 154, column: 17, scope: !537)
!542 = !DILocation(line: 156, column: 17, scope: !543)
!543 = distinct !DILexicalBlock(scope: !530, file: !59, line: 155, column: 20)
!544 = !DILocation(line: 157, column: 21, scope: !545)
!545 = distinct !DILexicalBlock(scope: !543, file: !59, line: 157, column: 21)
!546 = !DILocation(line: 157, column: 25, scope: !545)
!547 = !DILocation(line: 157, column: 31, scope: !545)
!548 = !DILocation(line: 157, column: 21, scope: !543)
!549 = !DILocation(line: 158, column: 53, scope: !550)
!550 = distinct !DILexicalBlock(scope: !545, file: !59, line: 157, column: 63)
!551 = !DILocation(line: 158, column: 21, scope: !550)
!552 = !DILocation(line: 159, column: 17, scope: !550)
!553 = !DILocation(line: 161, column: 9, scope: !531)
!554 = !DILocation(line: 162, column: 13, scope: !555)
!555 = distinct !DILexicalBlock(scope: !525, file: !59, line: 162, column: 13)
!556 = !DILocation(line: 162, column: 13, scope: !525)
!557 = !DILocalVariable(name: "w", scope: !558, file: !59, line: 163, type: !430)
!558 = distinct !DILexicalBlock(scope: !555, file: !59, line: 162, column: 28)
!559 = !DILocation(line: 163, column: 31, scope: !558)
!560 = !DILocation(line: 163, column: 57, scope: !558)
!561 = !DILocation(line: 163, column: 35, scope: !558)
!562 = !DILocation(line: 164, column: 36, scope: !558)
!563 = !DILocation(line: 164, column: 39, scope: !558)
!564 = !DILocation(line: 164, column: 13, scope: !558)
!565 = !DILocation(line: 165, column: 9, scope: !558)
!566 = !DILocation(line: 166, column: 5, scope: !525)
!567 = !DILocation(line: 167, column: 1, scope: !514)
!568 = distinct !{!568, !512}
!569 = !DILocalVariable(name: "sf", arg: 1, scope: !570, file: !59, line: 275, type: !73)
!570 = distinct !DISubprogram(name: "__cilk_parent_epilogue", scope: !59, file: !59, line: 275, type: !71, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!571 = !DILocation(line: 275, column: 47, scope: !570)
!572 = !DILocation(line: 276, column: 27, scope: !570)
!573 = !DILocalVariable(name: "sf", arg: 1, scope: !574, file: !59, line: 188, type: !73)
!574 = distinct !DISubprogram(name: "__cilkrts_leave_frame", scope: !59, file: !59, line: 188, type: !71, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!575 = !DILocation(line: 188, column: 46, scope: !574, inlinedAt: !576)
!576 = distinct !DILocation(line: 276, column: 5, scope: !570)
!577 = !DILocalVariable(name: "w", scope: !574, file: !59, line: 189, type: !430)
!578 = !DILocation(line: 189, column: 23, scope: !574, inlinedAt: !576)
!579 = !DILocation(line: 189, column: 49, scope: !574, inlinedAt: !576)
!580 = !DILocation(line: 189, column: 27, scope: !574, inlinedAt: !576)
!581 = !DILocation(line: 190, column: 5, scope: !574, inlinedAt: !576)
!582 = !DILocalVariable(name: "parent", scope: !574, file: !59, line: 196, type: !73)
!583 = !DILocation(line: 196, column: 28, scope: !574, inlinedAt: !576)
!584 = !DILocation(line: 196, column: 37, scope: !574, inlinedAt: !576)
!585 = !DILocation(line: 196, column: 41, scope: !574, inlinedAt: !576)
!586 = !DILocation(line: 201, column: 30, scope: !574, inlinedAt: !576)
!587 = !DILocation(line: 201, column: 5, scope: !574, inlinedAt: !576)
!588 = !DILocation(line: 201, column: 8, scope: !574, inlinedAt: !576)
!589 = !DILocation(line: 201, column: 28, scope: !574, inlinedAt: !576)
!590 = !DILocation(line: 202, column: 5, scope: !574, inlinedAt: !576)
!591 = !DILocation(line: 202, column: 9, scope: !574, inlinedAt: !576)
!592 = !DILocation(line: 202, column: 21, scope: !574, inlinedAt: !576)
!593 = !DILocalVariable(name: "flags", scope: !574, file: !59, line: 206, type: !55)
!594 = !DILocation(line: 206, column: 14, scope: !574, inlinedAt: !576)
!595 = !DILocation(line: 206, column: 22, scope: !574, inlinedAt: !576)
!596 = !DILocation(line: 206, column: 26, scope: !574, inlinedAt: !576)
!597 = !DILocation(line: 207, column: 9, scope: !598, inlinedAt: !576)
!598 = distinct !DILexicalBlock(scope: !574, file: !59, line: 207, column: 9)
!599 = !DILocation(line: 207, column: 15, scope: !598, inlinedAt: !576)
!600 = !DILocation(line: 207, column: 9, scope: !574, inlinedAt: !576)
!601 = !DILocation(line: 208, column: 19, scope: !602, inlinedAt: !576)
!602 = distinct !DILexicalBlock(scope: !598, file: !59, line: 207, column: 34)
!603 = !DILocation(line: 208, column: 22, scope: !602, inlinedAt: !576)
!604 = !DILocation(line: 208, column: 25, scope: !602, inlinedAt: !576)
!605 = !DILocalVariable(name: "g", arg: 1, scope: !606, file: !59, line: 49, type: !158)
!606 = distinct !DISubprogram(name: "uncilkify", scope: !59, file: !59, line: 49, type: !607, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!607 = !DISubroutineType(types: !608)
!608 = !{null, !158, !73}
!609 = !DILocation(line: 49, column: 25, scope: !606, inlinedAt: !610)
!610 = distinct !DILocation(line: 208, column: 9, scope: !602, inlinedAt: !576)
!611 = !DILocalVariable(name: "sf", arg: 2, scope: !606, file: !59, line: 49, type: !73)
!612 = !DILocation(line: 49, column: 51, scope: !606, inlinedAt: !610)
!613 = !DILocation(line: 52, column: 26, scope: !614, inlinedAt: !610)
!614 = distinct !DILexicalBlock(scope: !606, file: !59, line: 52, column: 9)
!615 = !DILocation(line: 52, column: 30, scope: !614, inlinedAt: !610)
!616 = !DILocation(line: 52, column: 9, scope: !614, inlinedAt: !610)
!617 = !DILocation(line: 52, column: 35, scope: !614, inlinedAt: !610)
!618 = !DILocation(line: 52, column: 9, scope: !606, inlinedAt: !610)
!619 = !DILocation(line: 53, column: 35, scope: !620, inlinedAt: !610)
!620 = distinct !DILexicalBlock(scope: !614, file: !59, line: 52, column: 41)
!621 = !DILocation(line: 43, column: 50, scope: !460, inlinedAt: !622)
!622 = distinct !DILocation(line: 53, column: 9, scope: !620, inlinedAt: !610)
!623 = !DILocation(line: 56, column: 48, scope: !620, inlinedAt: !610)
!624 = !DILocation(line: 56, column: 51, scope: !620, inlinedAt: !610)
!625 = !DILocation(line: 56, column: 9, scope: !620, inlinedAt: !610)
!626 = !DILocation(line: 57, column: 5, scope: !620, inlinedAt: !610)
!627 = !DILocation(line: 58, column: 9, scope: !628, inlinedAt: !610)
!628 = distinct !DILexicalBlock(scope: !614, file: !59, line: 57, column: 12)
!629 = !DILocation(line: 209, column: 17, scope: !602, inlinedAt: !576)
!630 = !DILocation(line: 209, column: 21, scope: !602, inlinedAt: !576)
!631 = !DILocation(line: 209, column: 15, scope: !602, inlinedAt: !576)
!632 = !DILocation(line: 210, column: 5, scope: !602, inlinedAt: !576)
!633 = !DILocation(line: 212, column: 9, scope: !634, inlinedAt: !576)
!634 = distinct !DILexicalBlock(scope: !574, file: !59, line: 212, column: 9)
!635 = !DILocation(line: 212, column: 15, scope: !634, inlinedAt: !576)
!636 = !DILocation(line: 212, column: 9, scope: !574, inlinedAt: !576)
!637 = !DILocation(line: 213, column: 9, scope: !638, inlinedAt: !576)
!638 = distinct !DILexicalBlock(scope: !634, file: !59, line: 212, column: 21)
!639 = !DILocation(line: 222, column: 9, scope: !640, inlinedAt: !576)
!640 = distinct !DILexicalBlock(scope: !574, file: !59, line: 222, column: 9)
!641 = !DILocation(line: 222, column: 15, scope: !640, inlinedAt: !576)
!642 = !DILocation(line: 222, column: 9, scope: !574, inlinedAt: !576)
!643 = !DILocation(line: 223, column: 9, scope: !644, inlinedAt: !576)
!644 = distinct !DILexicalBlock(scope: !640, file: !59, line: 222, column: 36)
!645 = !DILocation(line: 227, column: 25, scope: !644, inlinedAt: !576)
!646 = !DILocation(line: 227, column: 9, scope: !644, inlinedAt: !576)
!647 = !DILocation(line: 229, column: 5, scope: !644, inlinedAt: !576)
!648 = distinct !{!648, !649}
!649 = !{!"llvm.loop.mustprogress"}
!650 = distinct !{!650, !649}
!651 = distinct !DISubprogram(name: "__cilkrts_extend_spawn", scope: !652, file: !652, line: 5, type: !653, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!652 = !DIFile(filename: "runtime/pedigree_ext.c", directory: "/afs/ece.cmu.edu/project/seth_group/pakha/opencilk/cheetah", checksumkind: CSK_MD5, checksum: "a7e1c9f20e6f1730d621790a8018b759")
!653 = !DISubroutineType(types: !654)
!654 = !{null, !430, !655, !655}
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!656 = !DILocalVariable(name: "w", arg: 1, scope: !651, file: !652, line: 5, type: !430)
!657 = !DILocation(line: 5, column: 47, scope: !651)
!658 = !DILocalVariable(name: "parent_extension", arg: 2, scope: !651, file: !652, line: 5, type: !655)
!659 = !DILocation(line: 5, column: 57, scope: !651)
!660 = !DILocalVariable(name: "child_extension", arg: 3, scope: !651, file: !652, line: 6, type: !655)
!661 = !DILocation(line: 6, column: 36, scope: !651)
!662 = !DILocation(line: 9, column: 26, scope: !651)
!663 = !DILocation(line: 9, column: 25, scope: !651)
!664 = !DILocation(line: 9, column: 6, scope: !651)
!665 = !DILocation(line: 9, column: 23, scope: !651)
!666 = !DILocalVariable(name: "frame", scope: !651, file: !652, line: 12, type: !25)
!667 = !DILocation(line: 12, column: 23, scope: !651)
!668 = !DILocation(line: 12, column: 51, scope: !651)
!669 = !DILocation(line: 12, column: 31, scope: !651)
!670 = !DILocation(line: 13, column: 24, scope: !651)
!671 = !DILocation(line: 13, column: 6, scope: !651)
!672 = !DILocation(line: 13, column: 22, scope: !651)
!673 = !DILocalVariable(name: "parent_frame", scope: !651, file: !652, line: 16, type: !25)
!674 = !DILocation(line: 16, column: 23, scope: !651)
!675 = !DILocation(line: 16, column: 60, scope: !651)
!676 = !DILocation(line: 16, column: 59, scope: !651)
!677 = !DILocation(line: 16, column: 38, scope: !651)
!678 = !DILocation(line: 18, column: 28, scope: !651)
!679 = !DILocation(line: 18, column: 42, scope: !651)
!680 = !DILocation(line: 18, column: 5, scope: !651)
!681 = !DILocation(line: 18, column: 12, scope: !651)
!682 = !DILocation(line: 18, column: 21, scope: !651)
!683 = !DILocation(line: 18, column: 26, scope: !651)
!684 = !DILocation(line: 20, column: 32, scope: !651)
!685 = !DILocation(line: 20, column: 46, scope: !651)
!686 = !DILocation(line: 20, column: 5, scope: !651)
!687 = !DILocation(line: 20, column: 12, scope: !651)
!688 = !DILocation(line: 20, column: 21, scope: !651)
!689 = !DILocation(line: 20, column: 28, scope: !651)
!690 = !DILocation(line: 22, column: 5, scope: !651)
!691 = !DILocation(line: 22, column: 12, scope: !651)
!692 = !DILocation(line: 22, column: 17, scope: !651)
!693 = !DILocation(line: 25, column: 26, scope: !651)
!694 = !DILocation(line: 25, column: 40, scope: !651)
!695 = !DILocation(line: 25, column: 52, scope: !651)
!696 = !DILocation(line: 25, column: 5, scope: !651)
!697 = !DILocation(line: 25, column: 12, scope: !651)
!698 = !DILocation(line: 25, column: 24, scope: !651)
!699 = !DILocalVariable(name: "parent_dprng_dotproduct", scope: !651, file: !652, line: 27, type: !36)
!700 = !DILocation(line: 27, column: 14, scope: !651)
!701 = !DILocation(line: 27, column: 40, scope: !651)
!702 = !DILocation(line: 27, column: 54, scope: !651)
!703 = !DILocation(line: 29, column: 9, scope: !651)
!704 = !DILocation(line: 29, column: 34, scope: !651)
!705 = !DILocation(line: 29, column: 59, scope: !651)
!706 = !DILocation(line: 29, column: 66, scope: !651)
!707 = !DILocation(line: 28, column: 31, scope: !651)
!708 = !DILocation(line: 28, column: 5, scope: !651)
!709 = !DILocation(line: 28, column: 12, scope: !651)
!710 = !DILocation(line: 28, column: 29, scope: !651)
!711 = !DILocation(line: 32, column: 5, scope: !651)
!712 = !DILocation(line: 32, column: 19, scope: !651)
!713 = !DILocation(line: 32, column: 23, scope: !651)
!714 = !DILocation(line: 34, column: 9, scope: !651)
!715 = !DILocation(line: 35, column: 9, scope: !651)
!716 = !DILocation(line: 35, column: 34, scope: !651)
!717 = !DILocation(line: 35, column: 48, scope: !651)
!718 = !DILocation(line: 33, column: 38, scope: !651)
!719 = !DILocation(line: 33, column: 5, scope: !651)
!720 = !DILocation(line: 33, column: 19, scope: !651)
!721 = !DILocation(line: 33, column: 36, scope: !651)
!722 = !DILocation(line: 36, column: 1, scope: !651)
!723 = distinct !DISubprogram(name: "push_pedigree_frame", scope: !27, file: !27, line: 24, type: !724, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!724 = !DISubroutineType(types: !725)
!725 = !{!25, !430}
!726 = !DILocalVariable(name: "w", arg: 1, scope: !723, file: !27, line: 24, type: !430)
!727 = !DILocation(line: 24, column: 39, scope: !723)
!728 = !DILocation(line: 26, column: 37, scope: !723)
!729 = !DILocalVariable(name: "w", arg: 1, scope: !730, file: !160, line: 65, type: !430)
!730 = distinct !DISubprogram(name: "__cilkrts_push_ext_stack", scope: !160, file: !160, line: 65, type: !731, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!731 = !DISubroutineType(types: !732)
!732 = !{!46, !430, !60}
!733 = !DILocation(line: 65, column: 44, scope: !730, inlinedAt: !734)
!734 = distinct !DILocation(line: 26, column: 12, scope: !723)
!735 = !DILocalVariable(name: "size", arg: 2, scope: !730, file: !160, line: 65, type: !60)
!736 = !DILocation(line: 65, column: 54, scope: !730, inlinedAt: !734)
!737 = !DILocalVariable(name: "ext_stack_ptr", scope: !730, file: !160, line: 66, type: !47)
!738 = !DILocation(line: 66, column: 14, scope: !730, inlinedAt: !734)
!739 = !DILocation(line: 66, column: 42, scope: !730, inlinedAt: !734)
!740 = !DILocation(line: 66, column: 45, scope: !730, inlinedAt: !734)
!741 = !DILocation(line: 66, column: 58, scope: !730, inlinedAt: !734)
!742 = !DILocation(line: 66, column: 56, scope: !730, inlinedAt: !734)
!743 = !DILocation(line: 67, column: 28, scope: !730, inlinedAt: !734)
!744 = !DILocation(line: 67, column: 5, scope: !730, inlinedAt: !734)
!745 = !DILocation(line: 67, column: 8, scope: !730, inlinedAt: !734)
!746 = !DILocation(line: 67, column: 18, scope: !730, inlinedAt: !734)
!747 = !DILocation(line: 68, column: 12, scope: !730, inlinedAt: !734)
!748 = !DILocation(line: 26, column: 12, scope: !723)
!749 = !DILocation(line: 26, column: 5, scope: !723)
!750 = distinct !DISubprogram(name: "__cilkrts_dprng_sum_mod_p", scope: !27, file: !27, line: 55, type: !751, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!751 = !DISubroutineType(types: !752)
!752 = !{!36, !36, !36}
!753 = !DILocalVariable(name: "a", arg: 1, scope: !750, file: !27, line: 55, type: !36)
!754 = !DILocation(line: 55, column: 59, scope: !750)
!755 = !DILocalVariable(name: "b", arg: 2, scope: !750, file: !27, line: 55, type: !36)
!756 = !DILocation(line: 55, column: 71, scope: !750)
!757 = !DILocalVariable(name: "z", scope: !750, file: !27, line: 56, type: !36)
!758 = !DILocation(line: 56, column: 14, scope: !750)
!759 = !DILocation(line: 56, column: 18, scope: !750)
!760 = !DILocation(line: 56, column: 22, scope: !750)
!761 = !DILocation(line: 56, column: 20, scope: !750)
!762 = !DILocation(line: 57, column: 10, scope: !763)
!763 = distinct !DILexicalBlock(scope: !750, file: !27, line: 57, column: 9)
!764 = !DILocation(line: 57, column: 14, scope: !763)
!765 = !DILocation(line: 57, column: 12, scope: !763)
!766 = !DILocation(line: 57, column: 17, scope: !763)
!767 = !DILocation(line: 57, column: 21, scope: !763)
!768 = !DILocation(line: 57, column: 23, scope: !763)
!769 = !DILocation(line: 57, column: 9, scope: !750)
!770 = !DILocation(line: 58, column: 11, scope: !771)
!771 = distinct !DILexicalBlock(scope: !763, file: !27, line: 57, column: 40)
!772 = !DILocation(line: 59, column: 5, scope: !771)
!773 = !DILocation(line: 60, column: 12, scope: !750)
!774 = !DILocation(line: 60, column: 5, scope: !750)
!775 = distinct !DISubprogram(name: "__cilkrts_extend_return_from_spawn", scope: !652, file: !652, line: 38, type: !776, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !430, !655}
!778 = !DILocalVariable(name: "w", arg: 1, scope: !775, file: !652, line: 38, type: !430)
!779 = !DILocation(line: 38, column: 59, scope: !775)
!780 = !DILocalVariable(name: "extension", arg: 2, scope: !775, file: !652, line: 38, type: !655)
!781 = !DILocation(line: 38, column: 69, scope: !775)
!782 = !DILocation(line: 40, column: 24, scope: !775)
!783 = !DILocation(line: 40, column: 5, scope: !775)
!784 = !DILocation(line: 41, column: 1, scope: !775)
!785 = distinct !DISubprogram(name: "pop_pedigree_frame", scope: !27, file: !27, line: 32, type: !786, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!786 = !DISubroutineType(types: !787)
!787 = !{null, !430}
!788 = !DILocalVariable(name: "w", arg: 1, scope: !785, file: !27, line: 32, type: !430)
!789 = !DILocation(line: 32, column: 57, scope: !785)
!790 = !DILocation(line: 34, column: 29, scope: !785)
!791 = !DILocalVariable(name: "w", arg: 1, scope: !792, file: !160, line: 72, type: !430)
!792 = distinct !DISubprogram(name: "__cilkrts_pop_ext_stack", scope: !160, file: !160, line: 72, type: !731, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!793 = !DILocation(line: 72, column: 43, scope: !792, inlinedAt: !794)
!794 = distinct !DILocation(line: 34, column: 5, scope: !785)
!795 = !DILocalVariable(name: "size", arg: 2, scope: !792, file: !160, line: 72, type: !60)
!796 = !DILocation(line: 72, column: 53, scope: !792, inlinedAt: !794)
!797 = !DILocalVariable(name: "ext_stack_ptr", scope: !792, file: !160, line: 73, type: !47)
!798 = !DILocation(line: 73, column: 14, scope: !792, inlinedAt: !794)
!799 = !DILocation(line: 73, column: 42, scope: !792, inlinedAt: !794)
!800 = !DILocation(line: 73, column: 45, scope: !792, inlinedAt: !794)
!801 = !DILocation(line: 73, column: 58, scope: !792, inlinedAt: !794)
!802 = !DILocation(line: 73, column: 56, scope: !792, inlinedAt: !794)
!803 = !DILocation(line: 74, column: 28, scope: !792, inlinedAt: !794)
!804 = !DILocation(line: 74, column: 5, scope: !792, inlinedAt: !794)
!805 = !DILocation(line: 74, column: 8, scope: !792, inlinedAt: !794)
!806 = !DILocation(line: 74, column: 18, scope: !792, inlinedAt: !794)
!807 = !DILocation(line: 75, column: 12, scope: !792, inlinedAt: !794)
!808 = !DILocation(line: 36, column: 1, scope: !785)
!809 = distinct !DISubprogram(name: "__cilkrts_extend_sync", scope: !652, file: !652, line: 43, type: !810, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!810 = !DISubroutineType(types: !811)
!811 = !{null, !655}
!812 = !DILocalVariable(name: "extension", arg: 1, scope: !809, file: !652, line: 43, type: !655)
!813 = !DILocation(line: 43, column: 35, scope: !809)
!814 = !DILocalVariable(name: "frame", scope: !809, file: !652, line: 45, type: !25)
!815 = !DILocation(line: 45, column: 23, scope: !809)
!816 = !DILocation(line: 45, column: 53, scope: !809)
!817 = !DILocation(line: 45, column: 52, scope: !809)
!818 = !DILocation(line: 45, column: 31, scope: !809)
!819 = !DILocation(line: 46, column: 5, scope: !809)
!820 = !DILocation(line: 46, column: 12, scope: !809)
!821 = !DILocation(line: 46, column: 16, scope: !809)
!822 = !DILocation(line: 48, column: 9, scope: !809)
!823 = !DILocation(line: 48, column: 16, scope: !809)
!824 = !DILocation(line: 48, column: 34, scope: !809)
!825 = !DILocation(line: 48, column: 59, scope: !809)
!826 = !DILocation(line: 48, column: 66, scope: !809)
!827 = !DILocation(line: 47, column: 31, scope: !809)
!828 = !DILocation(line: 47, column: 5, scope: !809)
!829 = !DILocation(line: 47, column: 12, scope: !809)
!830 = !DILocation(line: 47, column: 29, scope: !809)
!831 = !DILocation(line: 49, column: 1, scope: !809)
!832 = distinct !DISubprogram(name: "sanitizer_finish_switch_fiber", scope: !188, file: !188, line: 119, type: !833, scopeLine: 119, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!833 = !DISubroutineType(types: !834)
!834 = !{null}
!835 = !DILocation(line: 119, column: 53, scope: !832)
!836 = distinct !DISubprogram(name: "get_worker_from_stack", scope: !59, file: !59, line: 108, type: !837, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !427)
!837 = !DISubroutineType(types: !838)
!838 = !{!430, !73}
!839 = !DILocalVariable(name: "sf", arg: 1, scope: !836, file: !59, line: 108, type: !73)
!840 = !DILocation(line: 108, column: 64, scope: !836)
!841 = !DILocation(line: 118, column: 34, scope: !836)
!842 = !DILocation(line: 118, column: 38, scope: !836)
!843 = !DILocation(line: 118, column: 12, scope: !836)
!844 = !DILocation(line: 118, column: 5, scope: !836)
!845 = !DILocalVariable(name: "sf", arg: 1, scope: !846, file: !59, line: 86, type: !73)
!846 = distinct !DISubprogram(name: "__cilkrts_enter_frame_helper", scope: !59, file: !59, line: 86, type: !71, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!847 = !DILocation(line: 86, column: 53, scope: !846)
!848 = !DILocalVariable(name: "w", scope: !846, file: !59, line: 87, type: !430)
!849 = !DILocation(line: 87, column: 23, scope: !846)
!850 = !DILocation(line: 54, column: 12, scope: !434, inlinedAt: !851)
!851 = distinct !DILocation(line: 87, column: 27, scope: !846)
!852 = !DILocation(line: 88, column: 5, scope: !846)
!853 = !DILocation(line: 90, column: 5, scope: !846)
!854 = !DILocation(line: 90, column: 9, scope: !846)
!855 = !DILocation(line: 90, column: 15, scope: !846)
!856 = !DILocation(line: 91, column: 5, scope: !846)
!857 = !DILocation(line: 91, column: 9, scope: !846)
!858 = !DILocation(line: 91, column: 15, scope: !846)
!859 = !DILocation(line: 92, column: 23, scope: !846)
!860 = !DILocation(line: 92, column: 26, scope: !846)
!861 = !DILocation(line: 92, column: 5, scope: !846)
!862 = !DILocation(line: 92, column: 9, scope: !846)
!863 = !DILocation(line: 92, column: 21, scope: !846)
!864 = !DILocation(line: 93, column: 28, scope: !846)
!865 = !DILocation(line: 93, column: 32, scope: !846)
!866 = !DILocation(line: 93, column: 40, scope: !846)
!867 = !DILocation(line: 93, column: 5, scope: !846)
!868 = !DILocation(line: 94, column: 30, scope: !846)
!869 = !DILocation(line: 94, column: 5, scope: !846)
!870 = !DILocation(line: 94, column: 8, scope: !846)
!871 = !DILocation(line: 94, column: 28, scope: !846)
!872 = !DILocalVariable(name: "sf", arg: 1, scope: !873, file: !59, line: 124, type: !73)
!873 = distinct !DISubprogram(name: "__cilkrts_detach", scope: !59, file: !59, line: 124, type: !71, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!874 = !DILocation(line: 124, column: 41, scope: !873)
!875 = !DILocalVariable(name: "w", scope: !873, file: !59, line: 125, type: !430)
!876 = !DILocation(line: 125, column: 23, scope: !873)
!877 = !DILocation(line: 125, column: 49, scope: !873)
!878 = !DILocation(line: 125, column: 27, scope: !873)
!879 = !DILocation(line: 126, column: 5, scope: !873)
!880 = !DILocalVariable(name: "parent", scope: !873, file: !59, line: 132, type: !81)
!881 = !DILocation(line: 132, column: 35, scope: !873)
!882 = !DILocation(line: 132, column: 44, scope: !873)
!883 = !DILocation(line: 132, column: 48, scope: !873)
!884 = !DILocation(line: 134, column: 9, scope: !885)
!885 = distinct !DILexicalBlock(scope: !873, file: !59, line: 134, column: 9)
!886 = !DILocation(line: 134, column: 9, scope: !873)
!887 = !DILocation(line: 135, column: 32, scope: !888)
!888 = distinct !DILexicalBlock(scope: !885, file: !59, line: 134, column: 24)
!889 = !DILocation(line: 135, column: 36, scope: !888)
!890 = !DILocation(line: 135, column: 44, scope: !888)
!891 = !DILocation(line: 135, column: 56, scope: !888)
!892 = !DILocation(line: 135, column: 59, scope: !888)
!893 = !DILocation(line: 135, column: 9, scope: !888)
!894 = !DILocation(line: 136, column: 5, scope: !888)
!895 = !DILocation(line: 138, column: 5, scope: !873)
!896 = !DILocation(line: 138, column: 9, scope: !873)
!897 = !DILocation(line: 138, column: 15, scope: !873)
!898 = !DILocalVariable(name: "tail", scope: !873, file: !59, line: 139, type: !90)
!899 = !DILocation(line: 139, column: 36, scope: !873)
!900 = !DILocation(line: 140, column: 31, scope: !873)
!901 = !DILocation(line: 140, column: 34, scope: !873)
!902 = !DILocation(line: 140, column: 9, scope: !873)
!903 = !DILocation(line: 144, column: 15, scope: !873)
!904 = !DILocation(line: 144, column: 10, scope: !873)
!905 = !DILocation(line: 144, column: 13, scope: !873)
!906 = !DILocation(line: 146, column: 28, scope: !873)
!907 = !DILocation(line: 146, column: 31, scope: !873)
!908 = !DILocation(line: 146, column: 37, scope: !873)
!909 = !DILocation(line: 146, column: 5, scope: !873)
!910 = !DILocalVariable(name: "sf", arg: 1, scope: !911, file: !59, line: 280, type: !73)
!911 = distinct !DISubprogram(name: "__cilk_helper_epilogue", scope: !59, file: !59, line: 280, type: !71, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!912 = !DILocation(line: 280, column: 47, scope: !911)
!913 = !DILocation(line: 281, column: 34, scope: !911)
!914 = !DILocalVariable(name: "sf", arg: 1, scope: !915, file: !59, line: 233, type: !73)
!915 = distinct !DISubprogram(name: "__cilkrts_leave_frame_helper", scope: !59, file: !59, line: 233, type: !71, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!916 = !DILocation(line: 233, column: 53, scope: !915, inlinedAt: !917)
!917 = distinct !DILocation(line: 281, column: 5, scope: !911)
!918 = !DILocalVariable(name: "w", scope: !915, file: !59, line: 234, type: !430)
!919 = !DILocation(line: 234, column: 23, scope: !915, inlinedAt: !917)
!920 = !DILocation(line: 234, column: 49, scope: !915, inlinedAt: !917)
!921 = !DILocation(line: 234, column: 27, scope: !915, inlinedAt: !917)
!922 = !DILocation(line: 235, column: 5, scope: !915, inlinedAt: !917)
!923 = !DILocalVariable(name: "parent", scope: !915, file: !59, line: 244, type: !73)
!924 = !DILocation(line: 244, column: 28, scope: !915, inlinedAt: !917)
!925 = !DILocation(line: 244, column: 37, scope: !915, inlinedAt: !917)
!926 = !DILocation(line: 244, column: 41, scope: !915, inlinedAt: !917)
!927 = !DILocation(line: 245, column: 30, scope: !915, inlinedAt: !917)
!928 = !DILocation(line: 245, column: 5, scope: !915, inlinedAt: !917)
!929 = !DILocation(line: 245, column: 8, scope: !915, inlinedAt: !917)
!930 = !DILocation(line: 245, column: 28, scope: !915, inlinedAt: !917)
!931 = !DILocation(line: 246, column: 9, scope: !932, inlinedAt: !917)
!932 = distinct !DILexicalBlock(scope: !915, file: !59, line: 246, column: 9)
!933 = !DILocation(line: 246, column: 9, scope: !915, inlinedAt: !917)
!934 = !DILocation(line: 247, column: 44, scope: !935, inlinedAt: !917)
!935 = distinct !DILexicalBlock(scope: !932, file: !59, line: 246, column: 24)
!936 = !DILocation(line: 247, column: 48, scope: !935, inlinedAt: !917)
!937 = !DILocation(line: 247, column: 51, scope: !935, inlinedAt: !917)
!938 = !DILocation(line: 247, column: 9, scope: !935, inlinedAt: !917)
!939 = !DILocation(line: 248, column: 24, scope: !935, inlinedAt: !917)
!940 = !DILocation(line: 248, column: 32, scope: !935, inlinedAt: !917)
!941 = !DILocation(line: 248, column: 9, scope: !935, inlinedAt: !917)
!942 = !DILocation(line: 248, column: 12, scope: !935, inlinedAt: !917)
!943 = !DILocation(line: 248, column: 22, scope: !935, inlinedAt: !917)
!944 = !DILocation(line: 249, column: 5, scope: !935, inlinedAt: !917)
!945 = !DILocation(line: 250, column: 5, scope: !915, inlinedAt: !917)
!946 = !DILocation(line: 250, column: 9, scope: !915, inlinedAt: !917)
!947 = !DILocation(line: 250, column: 21, scope: !915, inlinedAt: !917)
!948 = !DILocalVariable(name: "tail", scope: !915, file: !59, line: 254, type: !949)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!950 = !DILocation(line: 254, column: 29, scope: !915, inlinedAt: !917)
!951 = !DILocation(line: 255, column: 35, scope: !915, inlinedAt: !917)
!952 = !DILocation(line: 255, column: 38, scope: !915, inlinedAt: !917)
!953 = !DILocation(line: 255, column: 13, scope: !915, inlinedAt: !917)
!954 = !DILocation(line: 256, column: 5, scope: !915, inlinedAt: !917)
!955 = !DILocation(line: 259, column: 28, scope: !915, inlinedAt: !917)
!956 = !DILocation(line: 259, column: 31, scope: !915, inlinedAt: !917)
!957 = !DILocation(line: 259, column: 37, scope: !915, inlinedAt: !917)
!958 = !DILocation(line: 259, column: 5, scope: !915, inlinedAt: !917)
!959 = !DILocalVariable(name: "exc", scope: !915, file: !59, line: 260, type: !949)
!960 = !DILocation(line: 260, column: 29, scope: !915, inlinedAt: !917)
!961 = !DILocation(line: 261, column: 35, scope: !915, inlinedAt: !917)
!962 = !DILocation(line: 261, column: 38, scope: !915, inlinedAt: !917)
!963 = !DILocation(line: 261, column: 13, scope: !915, inlinedAt: !917)
!964 = !DILocation(line: 265, column: 5, scope: !915, inlinedAt: !917)
!965 = !DILocation(line: 265, column: 9, scope: !915, inlinedAt: !917)
!966 = !DILocation(line: 265, column: 15, scope: !915, inlinedAt: !917)
!967 = !DILocation(line: 266, column: 26, scope: !968, inlinedAt: !917)
!968 = distinct !DILexicalBlock(scope: !915, file: !59, line: 266, column: 9)
!969 = !DILocation(line: 266, column: 32, scope: !968, inlinedAt: !917)
!970 = !DILocation(line: 266, column: 30, scope: !968, inlinedAt: !917)
!971 = !DILocation(line: 266, column: 9, scope: !915, inlinedAt: !917)
!972 = !DILocation(line: 267, column: 9, scope: !973, inlinedAt: !917)
!973 = distinct !DILexicalBlock(scope: !968, file: !59, line: 266, column: 42)
!974 = !DILocation(line: 270, column: 5, scope: !973, inlinedAt: !917)
!975 = !DILocalVariable(name: "sf", arg: 1, scope: !976, file: !59, line: 339, type: !73)
!976 = distinct !DISubprogram(name: "__cilk_helper_epilogue_exn", scope: !59, file: !59, line: 339, type: !977, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!977 = !DISubroutineType(types: !978)
!978 = !{null, !73, !200}
!979 = !DILocation(line: 339, column: 51, scope: !976)
!980 = !DILocalVariable(name: "exn", arg: 2, scope: !976, file: !59, line: 339, type: !200)
!981 = !DILocation(line: 339, column: 61, scope: !976)
!982 = !DILocation(line: 340, column: 27, scope: !976)
!983 = !DILocation(line: 340, column: 31, scope: !976)
!984 = !DILocalVariable(name: "sf", arg: 1, scope: !985, file: !59, line: 295, type: !73)
!985 = distinct !DISubprogram(name: "__cilkrts_pause_frame", scope: !59, file: !59, line: 295, type: !977, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !427)
!986 = !DILocation(line: 295, column: 51, scope: !985, inlinedAt: !987)
!987 = distinct !DILocation(line: 340, column: 5, scope: !976)
!988 = !DILocalVariable(name: "exn", arg: 2, scope: !985, file: !59, line: 295, type: !200)
!989 = !DILocation(line: 295, column: 61, scope: !985, inlinedAt: !987)
!990 = !DILocalVariable(name: "w", scope: !985, file: !59, line: 296, type: !430)
!991 = !DILocation(line: 296, column: 23, scope: !985, inlinedAt: !987)
!992 = !DILocation(line: 296, column: 49, scope: !985, inlinedAt: !987)
!993 = !DILocation(line: 296, column: 27, scope: !985, inlinedAt: !987)
!994 = !DILocation(line: 297, column: 5, scope: !985, inlinedAt: !987)
!995 = !DILocalVariable(name: "parent", scope: !985, file: !59, line: 302, type: !73)
!996 = !DILocation(line: 302, column: 28, scope: !985, inlinedAt: !987)
!997 = !DILocation(line: 302, column: 37, scope: !985, inlinedAt: !987)
!998 = !DILocation(line: 302, column: 41, scope: !985, inlinedAt: !987)
!999 = !DILocation(line: 307, column: 30, scope: !985, inlinedAt: !987)
!1000 = !DILocation(line: 307, column: 5, scope: !985, inlinedAt: !987)
!1001 = !DILocation(line: 307, column: 8, scope: !985, inlinedAt: !987)
!1002 = !DILocation(line: 307, column: 28, scope: !985, inlinedAt: !987)
!1003 = !DILocation(line: 308, column: 5, scope: !985, inlinedAt: !987)
!1004 = !DILocation(line: 308, column: 9, scope: !985, inlinedAt: !987)
!1005 = !DILocation(line: 308, column: 21, scope: !985, inlinedAt: !987)
!1006 = !DILocation(line: 312, column: 9, scope: !1007, inlinedAt: !987)
!1007 = distinct !DILexicalBlock(scope: !985, file: !59, line: 312, column: 9)
!1008 = !DILocation(line: 312, column: 13, scope: !1007, inlinedAt: !987)
!1009 = !DILocation(line: 312, column: 19, scope: !1007, inlinedAt: !987)
!1010 = !DILocation(line: 312, column: 9, scope: !985, inlinedAt: !987)
!1011 = !DILocation(line: 313, column: 13, scope: !1012, inlinedAt: !987)
!1012 = distinct !DILexicalBlock(scope: !1013, file: !59, line: 313, column: 13)
!1013 = distinct !DILexicalBlock(scope: !1007, file: !59, line: 312, column: 42)
!1014 = !DILocation(line: 313, column: 13, scope: !1013, inlinedAt: !987)
!1015 = !DILocation(line: 314, column: 48, scope: !1016, inlinedAt: !987)
!1016 = distinct !DILexicalBlock(scope: !1012, file: !59, line: 313, column: 28)
!1017 = !DILocation(line: 314, column: 52, scope: !1016, inlinedAt: !987)
!1018 = !DILocation(line: 314, column: 55, scope: !1016, inlinedAt: !987)
!1019 = !DILocation(line: 314, column: 13, scope: !1016, inlinedAt: !987)
!1020 = !DILocation(line: 315, column: 28, scope: !1016, inlinedAt: !987)
!1021 = !DILocation(line: 315, column: 36, scope: !1016, inlinedAt: !987)
!1022 = !DILocation(line: 315, column: 13, scope: !1016, inlinedAt: !987)
!1023 = !DILocation(line: 315, column: 16, scope: !1016, inlinedAt: !987)
!1024 = !DILocation(line: 315, column: 26, scope: !1016, inlinedAt: !987)
!1025 = !DILocation(line: 316, column: 9, scope: !1016, inlinedAt: !987)
!1026 = !DILocalVariable(name: "tail", scope: !1013, file: !59, line: 317, type: !949)
!1027 = !DILocation(line: 317, column: 33, scope: !1013, inlinedAt: !987)
!1028 = !DILocation(line: 318, column: 35, scope: !1013, inlinedAt: !987)
!1029 = !DILocation(line: 318, column: 38, scope: !1013, inlinedAt: !987)
!1030 = !DILocation(line: 318, column: 13, scope: !1013, inlinedAt: !987)
!1031 = !DILocation(line: 319, column: 9, scope: !1013, inlinedAt: !987)
!1032 = !DILocation(line: 322, column: 32, scope: !1013, inlinedAt: !987)
!1033 = !DILocation(line: 322, column: 35, scope: !1013, inlinedAt: !987)
!1034 = !DILocation(line: 322, column: 41, scope: !1013, inlinedAt: !987)
!1035 = !DILocation(line: 322, column: 9, scope: !1013, inlinedAt: !987)
!1036 = !DILocalVariable(name: "exc", scope: !1013, file: !59, line: 323, type: !949)
!1037 = !DILocation(line: 323, column: 33, scope: !1013, inlinedAt: !987)
!1038 = !DILocation(line: 324, column: 35, scope: !1013, inlinedAt: !987)
!1039 = !DILocation(line: 324, column: 38, scope: !1013, inlinedAt: !987)
!1040 = !DILocation(line: 324, column: 13, scope: !1013, inlinedAt: !987)
!1041 = !DILocation(line: 328, column: 9, scope: !1013, inlinedAt: !987)
!1042 = !DILocation(line: 328, column: 13, scope: !1013, inlinedAt: !987)
!1043 = !DILocation(line: 328, column: 19, scope: !1013, inlinedAt: !987)
!1044 = !DILocation(line: 329, column: 30, scope: !1045, inlinedAt: !987)
!1045 = distinct !DILexicalBlock(scope: !1013, file: !59, line: 329, column: 13)
!1046 = !DILocation(line: 329, column: 36, scope: !1045, inlinedAt: !987)
!1047 = !DILocation(line: 329, column: 34, scope: !1045, inlinedAt: !987)
!1048 = !DILocation(line: 329, column: 13, scope: !1013, inlinedAt: !987)
!1049 = !DILocation(line: 330, column: 36, scope: !1050, inlinedAt: !987)
!1050 = distinct !DILexicalBlock(scope: !1045, file: !59, line: 329, column: 46)
!1051 = !DILocation(line: 330, column: 13, scope: !1050, inlinedAt: !987)
!1052 = !DILocation(line: 333, column: 9, scope: !1050, inlinedAt: !987)
!1053 = !DILocation(line: 335, column: 5, scope: !1013, inlinedAt: !987)
